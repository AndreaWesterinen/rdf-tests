{
  "@context": {
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "mf": "http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#",
    "mq": "http://www.w3.org/2001/sw/DataAccess/tests/test-query#",
    "rdft": "http://www.w3.org/ns/rdftest#",
    "comment": "rdfs:comment",
    "entries": {
      "@id": "mf:entries",
      "@container": "@list",
      "@type": "@id"
    },
    "name": "mf:name",
    "action": {
      "@id": "mf:action",
      "@type": "@id"
    },
    "result": {
      "@id": "mf:result",
      "@type": "@id"
    },
    "approval": {
      "@id": "rdft:approval",
      "@type": "@id"
    },
    "entailmentRegime": {
      "@id": "mf:entailmentRegime"
    },
    "recognizedDatatypes": {
      "@id": "mf:recognizedDatatypes",
      "@type": "@id",
      "@container": "@list"
    },
    "unrecognizedDatatypes": {
      "@id": "mf:unrecognizedDatatypes",
      "@type": "@id",
      "@container": "@list"
    }
  },
  "@id": "",
  "@type": "mf:Manifest",
  "entries": [
    {
      "@id": "#datatypes-intensional-xsd-integer-decimal-compatible",
      "@type": "mf:NegativeEntailmentTest",
      "action": "datatypes-intensional/test001.nt",
      "approval": "rdft:Approved",
      "comment": "\n    The claim that xsd:integer is a subClassOF xsd:decimal is not\n    incompatible with using the intensional semantics for\n    datatypes.\n  ",
      "entailmentRegime": "RDFS",
      "name": "datatypes-intensional-xsd-integer-decimal-compatible",
      "recognizedDatatypes": [
        "xsd:integer",
        "xsd:decimal"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-non-well-formed-literal-1",
      "@type": "mf:NegativeEntailmentTest",
      "action": "datatypes/test002.nt",
      "approval": "rdft:Approved",
      "comment": [
        "\n    Without datatype knowledge, a 'badly-formed' datatyped literal\n    cannot be detected.\n  ",
        "\n    Used to be a postitive test to itself.\n  "
      ],
      "entailmentRegime": "RDFS",
      "name": "datatypes-non-well-formed-literal-1",
      "unrecognizedDatatypes": [
        "xsd:integer"
      ],
      "result": false,
      "recognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-non-well-formed-literal-2",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test002.nt",
      "approval": "rdft:Approved",
      "comment": [
        "\n    With appropriate datatype knowledge, a 'badly-formed'\n    datatyped literal can be detected.\n  ",
        "\n    Ill-formed datatyped literals now are inconsistent.\n    Used to be negative entailment to <datatypes/test002b.nt>\n  "
      ],
      "entailmentRegime": "RDFS",
      "name": "datatypes-non-well-formed-literal-2",
      "recognizedDatatypes": [
        "xsd:integer"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-semantic-equivalence-within-type-1",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test003a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Demonstrating the semantic equivalence of two lexical forms of\n    the same datatyped value.\n  ",
      "entailmentRegime": "RDF",
      "name": "datatypes-semantic-equivalence-within-type-1",
      "recognizedDatatypes": [
        "xsd:integer"
      ],
      "result": "datatypes/test003b.nt",
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-semantic-equivalence-within-type-2",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test003b.nt",
      "approval": "rdft:Approved",
      "comment": "\n    As semantic-equivalence-within-type-1; the entailment works\n    both ways.\n  ",
      "entailmentRegime": "RDF",
      "name": "datatypes-semantic-equivalence-within-type-2",
      "recognizedDatatypes": [
        "xsd:integer"
      ],
      "result": "datatypes/test003a.nt",
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-semantic-equivalence-between-datatypes",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test005a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Members of different datatypes may be semantically equivalent.\n  ",
      "entailmentRegime": "RDF",
      "name": "datatypes-semantic-equivalence-between-datatypes",
      "recognizedDatatypes": [
        "xsd:decimal",
        "xsd:integer"
      ],
      "result": "datatypes/test005b.nt",
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-range-clash",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test006.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Where sufficient DT knowledge is available, a range clash may\n    be detected; the document then contains a contradiction.\n  ",
      "entailmentRegime": "RDFS",
      "name": "datatypes-range-clash",
      "recognizedDatatypes": [
        "xsd:integer",
        "xsd:string"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-test008",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test008a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    From decisions listed in\n    http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Oct/0098.html\n  ",
      "entailmentRegime": "simple",
      "name": "datatypes-test008",
      "result": "datatypes/test008b.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-test009",
      "@type": "mf:NegativeEntailmentTest",
      "action": "datatypes/test009a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    From decisions listed in\n    http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Oct/0098.html\n  ",
      "entailmentRegime": "simple",
      "name": "datatypes-test009",
      "result": "datatypes/test009b.nt",
      "unrecognizedDatatypes": [
        "xsd:integer"
      ],
      "recognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-test010",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test010.nt",
      "approval": "rdft:Approved",
      "comment": "\n    From decisions listed in\n    http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Oct/0098.html\n  ",
      "entailmentRegime": "RDFS",
      "name": "datatypes-test010",
      "recognizedDatatypes": [
        "xsd:integer"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#datatypes-plain-literal-and-xsd-string",
      "@type": "mf:PositiveEntailmentTest",
      "action": "datatypes/test011a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    A plain literal denotes the same thing as its corresponding\n    xsd:string, where one exists.\n  ",
      "entailmentRegime": "RDFS",
      "name": "datatypes-plain-literal-and-xsd-string",
      "recognizedDatatypes": [
        "xsd:string"
      ],
      "result": "datatypes/test011b.nt",
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#horst-01-subClassOf-intensional",
      "@type": "mf:NegativeEntailmentTest",
      "action": "horst-01/test001.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    rdfs:subClassOf has intensional semantics, not extensional.\n  ",
      "entailmentRegime": "RDFS",
      "name": "horst-01-subClassOf-intensional",
      "result": "horst-01/test002.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#horst-01-subPropertyOf-intensional",
      "@type": "mf:NegativeEntailmentTest",
      "action": "horst-01/test003.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    rdfs:subPropertyOf has intensional semantics, not extensional.\n  ",
      "entailmentRegime": "RDFS",
      "name": "horst-01-subPropertyOf-intensional",
      "result": "horst-01/test004.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdf-charmod-uris-test003",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdf-charmod-uris/test001.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    An international URI ref and its %-escaped form label\n    different nodes in the graph. No model theoretic relationship\n    holds between them.\n  ",
      "entailmentRegime": "RDF",
      "name": "rdf-charmod-uris-test003",
      "result": "rdf-charmod-uris/test002.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdf-charmod-uris-test004",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdf-charmod-uris/test002.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    An international URI ref and its %-escaped form label\n    different nodes in the graph. No model theoretic relationship\n    holds between them.\n  ",
      "entailmentRegime": "RDF",
      "name": "rdf-charmod-uris-test004",
      "result": "rdf-charmod-uris/test001.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfms-seq-representation-test002",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfms-seq-representation/empty.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Statement of the MT closure rule.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfms-seq-representation-test002",
      "result": "rdfms-seq-representation/test002.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfms-seq-representation-test003",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfms-seq-representation/test003a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Statement of the MT closure rule.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfms-seq-representation-test003",
      "result": "rdfms-seq-representation/test003b.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfms-seq-representation-test004",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfms-seq-representation/empty.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Statement of the MT closure rule.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfms-seq-representation-test004",
      "result": "rdfms-seq-representation/test004.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfms-xmllang-test007a",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdfms-xmllang/test007a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Plain literals are distinguishable on the basis of language\n    tags.\n  ",
      "entailmentRegime": "simple",
      "name": "rdfms-xmllang-test007a",
      "result": "rdfms-xmllang/test007b.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfms-xmllang-test007b",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdfms-xmllang/test007b.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Plain literals are distinguishable on the basis of language\n    tags.\n  ",
      "entailmentRegime": "simple",
      "name": "rdfms-xmllang-test007b",
      "result": "rdfms-xmllang/test007c.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfms-xmllang-test007c",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdfms-xmllang/test007c.nt",
      "approval": "rdft:Approved",
      "comment": "\n    Plain literals are distinguishable on the basis of language\n    tags.\n  ",
      "entailmentRegime": "simple",
      "name": "rdfms-xmllang-test007c",
      "result": "rdfms-xmllang/test007a.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-container-membership-superProperty-test001",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdfs-container-membership-superProperty/not1P.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    While it is a superproperty, _:a <rdfs:contains (@@member?)>\n    _:b . does NOT entail _:a <rdf:_n> _:b . for any _n.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfs-container-membership-superProperty-test001",
      "result": "rdfs-container-membership-superProperty/not1C.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-domain-and-range-intensionality-range",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdfs-domain-and-range/premises005.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    RDF Semantics defines rdfs:range to have an intensional\n    reading. However, semantic extensions may give an extensional\n    reading to range. The premise/conclusion pair is a\n    non-entailment for RDFS reasoning, but may hold in semantic\n    extensions.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfs-domain-and-range-intensionality-range",
      "result": "rdfs-domain-and-range/nonconclusions005.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-domain-and-range-intensionality-domain",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdfs-domain-and-range/premises006.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    RDF Semantics defines rdfs:range to have an intensional\n    reading of domain. However, semantic extensions may give an\n    extensional reading to domain. The premise/conclusion pair is\n    a non-entailment for RDFS reasoning, but may hold in semantic\n    extensions.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfs-domain-and-range-intensionality-domain",
      "result": "rdfs-domain-and-range/nonconclusions006.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-entailment-test001",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfs-entailment/test001.nt",
      "approval": "rdft:Approved",
      "comment": [
        "\n    Indicating a simple inconsistency drawn from RDFS. RDFS can\n    only produce inconsistencies through badly-formed XMLLiteral\n    datatypes.\n  ",
        "\n    rdf:XMLLiteral support is no longer mandatory.\n  "
      ],
      "entailmentRegime": "RDFS",
      "name": "rdfs-entailment-test001",
      "recognizedDatatypes": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-entailment-test002",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfs-entailment/test002p.nt",
      "approval": "rdft:Approved",
      "comment": [
        "\n    Datatype clashes can occur in RDFS entailment.\n  ",
        "\n    Use to be from an inconsistent graph, any entailment can be drawn. This\n    is an example.\n  "
      ],
      "entailmentRegime": "RDFS",
      "name": "rdfs-entailment-test002",
      "recognizedDatatypes": [
        "xsd:string",
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-no-cycles-in-subClassOf-test001",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfs-no-cycles-in-subClassOf/test001.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    Cycles are permitted in subClassOf; therefore, no error occurs\n    and the following entailment holds trivially.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfs-no-cycles-in-subClassOf-test001",
      "result": "rdfs-no-cycles-in-subClassOf/test001.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-no-cycles-in-subPropertyOf-test001",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfs-no-cycles-in-subPropertyOf/test001.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    Cycles are permitted in subPropertyOf; therefore, no error\n    occurs and the following entailment holds trivially.\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfs-no-cycles-in-subPropertyOf-test001",
      "result": "rdfs-no-cycles-in-subPropertyOf/test001.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-subClassOf-a-Property-test001",
      "@type": "mf:NegativeEntailmentTest",
      "action": "rdfs-subClassOf-a-Property/test001.nt",
      "approval": "rdft:Approved",
      "comment": "\n    an instance of the Property class may have an rdfs:subClassOf\n    property. the meaning of such a property is defined by the\n    model theory. The wording of the formal resolution is a bit\n    bare, so let me add a few words of explanation. What this\n    means is that a resource can be both a class and a property.\n    This test is encoded as follows: a Property may have a\n    subclass (that is, such an RDF graph is satisfiable)\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfs-subClassOf-a-Property-test001",
      "result": false,
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#rdfs-subPropertyOf-semantics-test001",
      "@type": "mf:PositiveEntailmentTest",
      "action": "rdfs-subPropertyOf-semantics/test001.nt",
      "approval": "rdft:Approved",
      "comment": "\n    The inheritance semantics of the subPropertyOf relationship\n    needs to be clarified. => subProperties inherit conjunctively\n    the domain and range of their superproperties\n  ",
      "entailmentRegime": "RDFS",
      "name": "rdfs-subPropertyOf-semantics-test001",
      "result": "rdfs-subPropertyOf-semantics/test002.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#statement-entailment-test001",
      "@type": "mf:NegativeEntailmentTest",
      "action": "statement-entailment/test001a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    RDFCore WG RESOLVED that a reified statement was a stating,\n    not a statement. The following entailment does not, therefore,\n    hold.\n  ",
      "entailmentRegime": "RDF",
      "name": "statement-entailment-test001",
      "result": "statement-entailment/test001b.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#statement-entailment-test002",
      "@type": "mf:NegativeEntailmentTest",
      "action": "statement-entailment/test002a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    RDFCore WG RESOLVED that a statement does NOT entail its\n    reification. The following entailment does not, therefore,\n    hold.\n  ",
      "entailmentRegime": "RDF",
      "name": "statement-entailment-test002",
      "result": "statement-entailment/test002b.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#statement-entailment-test003",
      "@type": "mf:NegativeEntailmentTest",
      "action": "statement-entailment/test001a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    RDFCore WG RESOLVED that a reified statement was a stating,\n    not a statement. The following entailment does not, therefore,\n    hold. This is the same as test001, but using RDFS-entailment.\n  ",
      "entailmentRegime": "RDFS",
      "name": "statement-entailment-test003",
      "result": "statement-entailment/test001b.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#statement-entailment-test004",
      "@type": "mf:NegativeEntailmentTest",
      "action": "statement-entailment/test002a.nt",
      "approval": "rdft:Approved",
      "comment": "\n    RDFCore WG RESOLVED that a statement does NOT entail its\n    reification. The following entailment does not, therefore,\n    hold. This is the same as test002, but using RDFS-entailment.\n  ",
      "entailmentRegime": "RDF",
      "name": "statement-entailment-test004",
      "result": "statement-entailment/test002b.nt",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#tex-01-language-tag-case-1",
      "@type": "mf:PositiveEntailmentTest",
      "action": "tex-01/test001.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    The case of the language tag is not significant.\n  ",
      "entailmentRegime": "RDF",
      "name": "tex-01-language-tag-case-1",
      "result": "tex-01/test002.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#tex-01-language-tag-case-2",
      "@type": "mf:PositiveEntailmentTest",
      "action": "tex-01/test002.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    The case of the language tag is not significant.\n  ",
      "entailmentRegime": "RDF",
      "name": "tex-01-language-tag-case-2",
      "result": "tex-01/test001.ttl",
      "recognizedDatatypes": [

      ],
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#xmlsch-02-whitespace-facet-1",
      "@type": "mf:NegativeEntailmentTest",
      "action": "xmlsch-02/test001.ttl",
      "approval": "rdft:Approved",
      "comment": "\n    A well-formed typed literal is not related to an ill-formed\n    literal. Even if they only differ by whitespace.\n  ",
      "entailmentRegime": "RDFS",
      "name": "xmlsch-02-whitespace-facet-1",
      "recognizedDatatypes": [
        "xsd:int"
      ],
      "result": "xmlsch-02/test002.ttl",
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#xmlsch-02-whitespace-facet-2",
      "@type": "mf:PositiveEntailmentTest",
      "action": "xmlsch-02/test002.ttl",
      "approval": "rdft:Approved",
      "comment": [
        "\n    A well-formed typed literal is not related to an ill-formed\n    literal. Even if they only differ by whitespace.\n  ",
        "\n    Ill-formed datatyped literals now are inconsistent.\n    Used to be negative entailment to <xmlsch-02/test001.ttl> .\n  "
      ],
      "entailmentRegime": "RDFS",
      "name": "xmlsch-02-whitespace-facet-2",
      "recognizedDatatypes": [
        "xsd:int"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    },
    {
      "@id": "#xmlsch-02-whitespace-facet-4",
      "@type": "mf:PositiveEntailmentTest",
      "action": "xmlsch-02/test002.ttl",
      "approval": "rdft:Approved",
      "comment": [
        "\n    An integer with whitespace is ill-formed.\n  ",
        "\n    Ill-formed datatyped literals now are inconsistent.\n    Used to be negative entailment.\n  "
      ],
      "entailmentRegime": "RDFS",
      "name": "xmlsch-02-whitespace-facet-4",
      "recognizedDatatypes": [
        "xsd:int"
      ],
      "result": false,
      "unrecognizedDatatypes": [

      ]
    }
  ],
  "name": "RDF Schema and Semantics tests"
}
