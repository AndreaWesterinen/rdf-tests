{
  "@context": {
    "dawgt": "http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#",
    "ent": "http://www.w3.org/ns/entailment/",
    "mf": "http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#",
    "mq": "http://www.w3.org/2001/sw/DataAccess/tests/test-query#",
    "pr": "http://www.w3.org/ns/owl-profile/",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sd": "http://www.w3.org/ns/sparql-service-description#",
    "sparql": "http://www.w3.org/ns/sparql#",
    "ut": "http://www.w3.org/2009/sparql/tests/test-update#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "action": {
      "@id": "mf:action",
      "@type": "@id"
    },
    "approval": {
      "@id": "dawgt:approval",
      "@type": "@id"
    },
    "approvedBy": {
      "@id": "dawgt:approvedBy",
      "@type": "@id"
    },
    "comment": {
      "@id": "rdfs:comment"
    },
    "conformanceRequirement": {
      "@id": "mf:conformanceRequirement",
      "@container": "@list",
      "@type": "@id"
    },
    "data": {
      "@id": "mq:data",
      "@type": "@id"
    },
    "endpoint": {
      "@id": "mq:endpoint",
      "@type": "@id"
    },
    "EntailmentProfile": {
      "@id": "sd:EntailmentProfile",
      "@type": "@id",
      "@container": "@list"
    },
    "entailmentRegime": {
      "@id": "sd:entailmentRegime",
      "@type": "@id",
      "@container": "@list"
    },
    "entries": {
      "@id": "mf:entries",
      "@container": "@list",
      "@type": "@id"
    },
    "feature": {
      "@id": "mf:feature",
      "@type": "@vocab"
    },
    "include": {
      "@id": "mf:include",
      "@container": "@list",
      "@type": "@id"
    },
    "includedSpecifications": {
      "@id": "mf:includedSpecifications",
      "@container": "@list",
      "@type": "@id"
    },
    "label": {
      "@id": "rdfs:label"
    },
    "name": {
      "@id": "mf:name"
    },
    "notable": {
      "@id": "mf:notable",
      "@type": "@vocab"
    },
    "query": {
      "@id": "mq:query",
      "@type": "@id"
    },
    "queryForm": {
      "@id": "mq:queryForm",
      "@type": "@vocab"
    },
    "requires": {
      "@id": "mf:requires",
      "@type": "@vocab",
      "@container": "@set"
    },
    "result": {
      "@id": "mf:result",
      "@type": "@id"
    },
    "serviceData": {
      "@id": "mq:serviceData",
      "@type": "@id"
    },
    "ut:data": {
      "@type": "@id"
    },
    "ut:graph": {
      "@type": "@id"
    },
    "ut:graphData": {
      "@type": "@id",
      "@container": "@set"
    },
    "ut:request": {
      "@type": "@vocab"
    },
    "ut:result": {
      "@type": "@vocab"
    }
  },
  "@id": "",
  "@type": "mf:Manifest",
  "entries": [
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_post_form",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/x-www-url-form-urlencoded\n    Content-Length: XXX\n\n    query=ASK%20%7B%7D\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "query via URL-encoded POST"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_dataset_default_graphs_get",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    GET /sparql?query=ASK%20%7B%20%3Chttp%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf%3E%20a%20%3Ftype%20.%20%3Chttp%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf%3E%20a%20%3Ftype%20.%20%7D&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf\n    Host: www.example\n    User-agent: sparql-client/0.1\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "GET query with protocol-specified default graph"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_dataset_default_graphs_post",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK { <http://kasei.us/2009/09/sparql/data/data1.rdf> ?p ?o . <http://kasei.us/2009/09/sparql/data/data2.rdf> ?p ?o }\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "POST query with protocol-specified default graphs"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_dataset_named_graphs_post",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/?named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK { GRAPH ?g { ?s ?p ?o } }\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "POST query with protocol-specified named graphs"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_dataset_named_graphs_get",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    GET /sparql/?named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf&query=ASK%20%7B%20GRAPH%20%3Fg%20%7B%20%3Fs%20%3Fp%20%3Fo%20%7D%20%7D HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "GET query with protocol-specified named graphs"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_dataset_full",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata3.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    SELECT ?g ?x ?s { ?x ?y ?o  GRAPH ?g { ?s ?p ?o } }\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "query with protocol-specified dataset (both named and default graphs)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_multiple_dataset",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK FROM <http://kasei.us/2009/09/sparql/data/data1.rdf> { <data1.rdf> ?p ?o }\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "query specifying dataset in both query string and protocol; test for use of protocol-specified dataset"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_get",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    GET /sparql?query=ASK%20%7B%7D\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "query via GET"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_content_type_select",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    SELECT (1 AS ?value) {}\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml, application/sparql-results+json, text/tab-separated-values, or text/csv\n       ",
      "name": "query appropriate content type (expect one of: XML, JSON, CSV, TSV)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_content_type_ask",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK {}\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n       ",
      "name": "query appropriate content type (expect one of: XML, JSON)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_content_type_describe",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    DESCRIBE <http://example.org/>\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/rdf+xml, application/rdf+json or text/turtle\n       ",
      "name": "query appropriate content type (expect one of: RDF/XML, Turtle, N-Triples, RDFa)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_content_type_construct",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    CONSTRUCT { <s> <p> 1 } WHERE {}\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/rdf+xml, application/rdf+json or text/turtle\n       ",
      "name": "query appropriate content type (expect one of: RDF/XML, Turtle, N-Triples, RDFa)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#update_dataset_default_graph",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-update\n    Content-Length: XXX\n\n    PREFIX dc: <http://purl.org/dc/terms/>\n    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n    CLEAR ALL ;\n    INSERT DATA {\n        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> {\n            <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document\n        }\n    } ;\n    INSERT {\n        GRAPH <http://example.org/protocol-update-dataset-test/> {\n            ?s a dc:BibliographicResource\n        }\n    }\n    WHERE {\n        ?s a foaf:Document\n    }\n    \n#### Response\n\n    2xx or 3xx response\n\nfollowed by\n\n#### Request\n\n    POST /sparql HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Accept: application/sparql-results+xml\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK {\n        GRAPH <http://example.org/protocol-update-dataset-test/> {\n            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource>\n        }\n    }\n\n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml\n    \n    true\n       ",
      "name": "update with protocol-specified default graph"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#update_dataset_default_graphs",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-update\n    Content-Length: XXX\n\n    PREFIX dc: <http://purl.org/dc/terms/>\n    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n    CLEAR ALL ;\n    INSERT DATA {\n        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n    } ;\n    INSERT {\n        GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n            ?s a dc:BibliographicResource\n        }\n    }\n    WHERE {\n        ?s a foaf:Document\n    }\n    \n#### Response\n\n    2xx or 3xx response\n\nfollowed by\n\n#### Request\n\n    POST /sparql HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Accept: application/sparql-results+xml\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK {\n        GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n            <http://kasei.us/2009/09/sparql/data/data2.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n        }\n        FILTER NOT EXISTS {\n            GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n                <http://kasei.us/2009/09/sparql/data/data3.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n            }\n        }\n    }\n\n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml\n    \n    true\n       ",
      "name": "update with protocol-specified default graphs"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#update_dataset_named_graphs",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql?using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-update\n    Content-Length: XXX\n\n    PREFIX dc: <http://purl.org/dc/terms/>\n    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n    CLEAR ALL ;\n    INSERT DATA {\n        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n    } ;\n    INSERT {\n        GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n            ?s a dc:BibliographicResource\n        }\n    }\n    WHERE {\n        GRAPH ?g {\n            ?s a foaf:Document\n        }\n    }\n    \n#### Response\n\n    2xx or 3xx response\n\nfollowed by\n\n#### Request\n\n    POST /sparql HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Accept: application/sparql-results+xml\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK {\n        GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n            <http://kasei.us/2009/09/sparql/data/data2.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n        }\n        FILTER NOT EXISTS {\n            GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n                <http://kasei.us/2009/09/sparql/data/data3.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n            }\n        }\n    }\n\n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml\n    \n    true\n       ",
      "name": "update with protocol-specified named graphs"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#update_dataset_full",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-update\n    Content-Length: XXX\n\n    PREFIX dc: <http://purl.org/dc/terms/>\n    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n    CLEAR ALL ;\n    INSERT DATA {\n        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n    } ;\n    INSERT {\n        GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n            ?s <http://example.org/in> ?in\n        }\n    }\n    WHERE {\n        {\n            GRAPH ?g { ?s a foaf:Document }\n            BIND(?g AS ?in)\n        }\n        UNION\n        {\n            ?s a foaf:Document .\n            BIND(\"default\" AS ?in)\n        }\n    }\n    \n#### Response\n\n    2xx or 3xx response\n\nfollowed by\n\n#### Request\n\n    POST /sparql HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Accept: application/sparql-results+xml\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK {\n        GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n            <http://kasei.us/2009/09/sparql/data/data1.rdf> <http://example.org/in> \"default\" .\n            <http://kasei.us/2009/09/sparql/data/data2.rdf> <http://example.org/in> <http://kasei.us/2009/09/sparql/data/data2.rdf> .\n        }\n        FILTER NOT EXISTS {\n            GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n                <http://kasei.us/2009/09/sparql/data/data3.rdf> ?p ?o\n            }\n        }\n    }\n\n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml\n    \n    true\n       ",
      "name": "update with protocol-specified dataset (both named and default graphs)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#update_post_form",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/x-www-url-form-urlencoded\n    Content-Length: XXX\n\n    update=CLEAR%20ALL\n    \n#### Response\n\n    2xx or 3xx response\n       ",
      "name": "update via URL-encoded POST"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#update_post_direct",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-update\n    Content-Length: XXX\n\n    CLEAR ALL\n    \n#### Response\n\n    2xx or 3xx response\n       ",
      "name": "update via POST directly"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#update_base_uri",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-update\n    Content-Length: XXX\n\n    CLEAR GRAPH <http://example.org/protocol-base-test/> ;\n    INSERT DATA { GRAPH <http://example.org/protocol-base-test/> { <http://example.org/s> <http://example.org/p> <test> } }\n    \n#### Response\n\n    2xx or 3xx response\n\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Accept: application/sparql-results+xml\n    Content-Length: XXX\n\n    SELECT ?o WHERE {\n        GRAPH <http://example.org/protocol-base-test/> {\n            <http://example.org/s> <http://example.org/p> ?o\n        }\n    }\n\n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml\n    \n    one result with `?o` bound to an IRI that is _not_ `<test>`\n       ",
      "name": "test for service-defined BASE URI (\"which MAY be the service endpoint\")"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#query_post_direct",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query\n    Content-Length: XXX\n\n    ASK {}\n    \n#### Response\n\n    2xx or 3xx response\n    Content-Type: application/sparql-results+xml or application/sparql-results+json\n\n    true\n       ",
      "name": "query via POST directly"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_query_method",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    PUT /sparql?query=ASK%20%7B%7D            \n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke query operation with a method other than GET or POST"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_multiple_queries",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    GET /sparql?query=ASK%20%7B%7D&query=SELECT%20%2A%20%7B%7D\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke query operation with more than one query string"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_query_wrong_media_type",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: text/plain\n    Content-Length: XXX\n\n    ASK {}\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke query operation with a POST with media type that's not url-encoded or application/sparql-query"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_query_missing_form_type",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Length: XXX\n\n    query=ASK%20%7B%7D\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke query operation with url-encoded body, but without application/x-www-url-form-urlencoded media type"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_query_missing_direct_type",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Length: XXX\n\n    ASK {}\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke query operation with SPARQL body, but without application/sparql-query media type"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_query_non_utf8",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n(content body encoded in utf-16)\n\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-query; charset=UTF-16\n    Content-Length: XXX\n\n    ASK {}\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke query operation with direct POST, but with a non-UTF8 encoding (UTF-16)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_query_syntax",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    GET /sparql?query=ASK%20%7B\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke query operation with invalid query syntax (4XX result)"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_update_get",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    GET /sparql?update=CLEAR%20ALL\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke update operation with GET"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_multiple_updates",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/x-www-url-form-urlencoded\n    Content-Length: XXX\n\n    update=CLEAR%20NAMED&update=CLEAR%20DEFAULT\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke update operation with more than one update string"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_update_wrong_media_type",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: text/plain\n    Content-Length: XXX\n\n    CLEAR NAMED\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke update operation with a POST with media type that's not url-encoded or application/sparql-update"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_update_missing_form_type",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Length: XXX\n\n    update=CLEAR%20NAMED\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke update operation with url-encoded body, but without application/x-www-url-form-urlencoded media type"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_update_non_utf8",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n(content body encoded in utf-16)\n\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/sparql-update; charset=UTF-16\n    Content-Length: XXX\n\n    CLEAR NAMED\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke update operation with direct POST, but with a non-UTF8 encoding"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_update_syntax",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/x-www-url-form-urlencoded\n    Content-Length: XXX\n\n    update=CLEAR%20XYZ\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke update operation with invalid update syntax"
    },
    {
      "@id": "http://www.w3.org/2009/sparql/docs/tests/data-sparql11/protocol/manifest#bad_update_dataset_conflict",
      "@type": "mf:ProtocolTest",
      "approval": "dawgt:Approved",
      "approvedBy": "http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3",
      "comment": "\n#### Request\n\n    POST /sparql/ HTTP/1.1\n    Host: www.example\n    User-agent: sparql-client/0.1\n    Content-Type: application/x-www-url-form-urlencoded\n    Content-Length: XXX\n\n    using-named-graph-uri=http%3A%2F%2Fexample%2Fpeople&update=%09%09PREFIX%20foaf%3A%20%20%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%09%09WITH%20%3Chttp%3A%2F%2Fexample%2Faddresses%3E%0A%09%09DELETE%20%7B%20%3Fperson%20foaf%3AgivenName%20%27Bill%27%20%7D%0A%09%09INSERT%20%7B%20%3Fperson%20foaf%3AgivenName%20%27William%27%20%7D%0A%09%09WHERE%20%7B%0A%09%09%09%3Fperson%20foaf%3AgivenName%20%27Bill%27%0A%09%09%7D%0A\n    \n#### Response\n\n    4xx\n       ",
      "name": "invoke update with both using-graph-uri/using-named-graph-uri parameter and USING/WITH clause"
    }
  ],
  "label": "SPARQL Protocol"
}
