{
  "@context": {
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "mf": "http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#",
    "mq": "http://www.w3.org/2001/sw/DataAccess/tests/test-query#",
    "rdft": "http://www.w3.org/ns/rdftest#",
    "action": {
      "@id": "mf:action",
      "@type": "@id"
    },
    "approval": {
      "@id": "rdft:approval",
      "@type": "@id"
    },
    "comment": "rdfs:comment",
    "entries": {
      "@id": "mf:entries",
      "@container": "@list",
      "@type": "@id"
    },
    "include": {
      "@id": "mf:include",
      "@container": "@list",
      "@type": "@id"
    },
    "label": "rdfs:label",
    "name": "mf:name",
    "result": {
      "@id": "mf:result",
      "@type": "@id"
    }
  },
  "@id": "",
  "@type": "mf:Manifest",
  "entries": [
    {
      "@id": "#IRI_subject",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI_subject.ttl",
      "approval": "rdft:Approved",
      "comment": "IRI subject",
      "name": "IRI_subject",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#IRI_with_four_digit_numeric_escape",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI_with_four_digit_numeric_escape.ttl",
      "approval": "rdft:Approved",
      "comment": "IRI with four digit numeric escape (\\u)",
      "name": "IRI_with_four_digit_numeric_escape",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#IRI_with_eight_digit_numeric_escape",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI_with_eight_digit_numeric_escape.ttl",
      "approval": "rdft:Approved",
      "comment": "IRI with eight digit numeric escape (\\U)",
      "name": "IRI_with_eight_digit_numeric_escape",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#IRI_with_all_punctuation",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI_with_all_punctuation.ttl",
      "approval": "rdft:Approved",
      "comment": "IRI with all punctuation",
      "name": "IRI_with_all_punctuation",
      "result": "IRI_with_all_punctuation.nt"
    },
    {
      "@id": "#bareword_a_predicate",
      "@type": "rdft:TestTurtleEval",
      "action": "bareword_a_predicate.ttl",
      "approval": "rdft:Approved",
      "comment": "bareword a predicate",
      "name": "bareword_a_predicate",
      "result": "bareword_a_predicate.nt"
    },
    {
      "@id": "#old_style_prefix",
      "@type": "rdft:TestTurtleEval",
      "action": "old_style_prefix.ttl",
      "approval": "rdft:Approved",
      "comment": "old-style prefix",
      "name": "old_style_prefix",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#SPARQL_style_prefix",
      "@type": "rdft:TestTurtleEval",
      "action": "SPARQL_style_prefix.ttl",
      "approval": "rdft:Approved",
      "comment": "SPARQL-style prefix",
      "name": "SPARQL_style_prefix",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#prefixed_IRI_predicate",
      "@type": "rdft:TestTurtleEval",
      "action": "prefixed_IRI_predicate.ttl",
      "approval": "rdft:Approved",
      "comment": "prefixed IRI predicate",
      "name": "prefixed_IRI_predicate",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#prefixed_IRI_object",
      "@type": "rdft:TestTurtleEval",
      "action": "prefixed_IRI_object.ttl",
      "approval": "rdft:Approved",
      "comment": "prefixed IRI object",
      "name": "prefixed_IRI_object",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#prefix_only_IRI",
      "@type": "rdft:TestTurtleEval",
      "action": "prefix_only_IRI.ttl",
      "approval": "rdft:Approved",
      "comment": "prefix-only IRI (p:)",
      "name": "prefix_only_IRI",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#prefix_with_PN_CHARS_BASE_character_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "prefix_with_PN_CHARS_BASE_character_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "prefix with PN CHARS BASE character boundaries (prefix: AZazÀÖØöø...:)",
      "name": "prefix_with_PN_CHARS_BASE_character_boundaries",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#prefix_with_non_leading_extras",
      "@type": "rdft:TestTurtleEval",
      "action": "prefix_with_non_leading_extras.ttl",
      "approval": "rdft:Approved",
      "comment": "prefix with_non_leading_extras (_:a·̀ͯ‿.⁀)",
      "name": "prefix_with_non_leading_extras",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#default_namespace_IRI",
      "@type": "rdft:TestTurtleEval",
      "action": "default_namespace_IRI.ttl",
      "approval": "rdft:Approved",
      "comment": "default namespace IRI (:ln)",
      "name": "default_namespace_IRI",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#prefix_reassigned_and_used",
      "@type": "rdft:TestTurtleEval",
      "action": "prefix_reassigned_and_used.ttl",
      "approval": "rdft:Approved",
      "comment": "prefix reassigned and used",
      "name": "prefix_reassigned_and_used",
      "result": "prefix_reassigned_and_used.nt"
    },
    {
      "@id": "#reserved_escaped_localName",
      "@type": "rdft:TestTurtleEval",
      "action": "reserved_escaped_localName.ttl",
      "approval": "rdft:Approved",
      "comment": "reserved-escaped local name",
      "name": "reserved_escaped_localName",
      "result": "reserved_escaped_localName.nt"
    },
    {
      "@id": "#percent_escaped_localName",
      "@type": "rdft:TestTurtleEval",
      "action": "percent_escaped_localName.ttl",
      "approval": "rdft:Approved",
      "comment": "percent-escaped local name",
      "name": "percent_escaped_localName",
      "result": "percent_escaped_localName.nt"
    },
    {
      "@id": "#HYPHEN_MINUS_in_localName",
      "@type": "rdft:TestTurtleEval",
      "action": "HYPHEN_MINUS_in_localName.ttl",
      "approval": "rdft:Approved",
      "comment": "HYPHEN-MINUS in local name",
      "name": "HYPHEN_MINUS_in_localName",
      "result": "HYPHEN_MINUS_in_localName.nt"
    },
    {
      "@id": "#underscore_in_localName",
      "@type": "rdft:TestTurtleEval",
      "action": "underscore_in_localName.ttl",
      "approval": "rdft:Approved",
      "comment": "underscore in local name",
      "name": "underscore_in_localName",
      "result": "underscore_in_localName.nt"
    },
    {
      "@id": "#localname_with_COLON",
      "@type": "rdft:TestTurtleEval",
      "action": "localname_with_COLON.ttl",
      "approval": "rdft:Approved",
      "comment": "localname with COLON",
      "name": "localname_with_COLON",
      "result": "localname_with_COLON.nt"
    },
    {
      "@id": "#localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "localName with assigned, NFC-normalized, basic-multilingual-plane PN CHARS BASE character boundaries (p:AZazÀÖØöø...)",
      "name": "localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries",
      "result": "localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.nt"
    },
    {
      "@id": "#localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "localName with assigned, NFC-normalized PN CHARS BASE character boundaries (p:AZazÀÖØöø...)",
      "name": "localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries",
      "result": "localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.nt"
    },
    {
      "@id": "#localName_with_nfc_PN_CHARS_BASE_character_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "localName_with_nfc_PN_CHARS_BASE_character_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "localName with nfc-normalize PN CHARS BASE character boundaries (p:AZazÀÖØöø...)",
      "name": "localName_with_nfc_PN_CHARS_BASE_character_boundaries",
      "result": "localName_with_nfc_PN_CHARS_BASE_character_boundaries.nt"
    },
    {
      "@id": "#localName_with_leading_underscore",
      "@type": "rdft:TestTurtleEval",
      "action": "localName_with_leading_underscore.ttl",
      "approval": "rdft:Approved",
      "comment": "localName with leading underscore (p:_)",
      "name": "localName_with_leading_underscore",
      "result": "localName_with_leading_underscore.nt"
    },
    {
      "@id": "#localName_with_leading_digit",
      "@type": "rdft:TestTurtleEval",
      "action": "localName_with_leading_digit.ttl",
      "approval": "rdft:Approved",
      "comment": "localName with leading digit (p:_)",
      "name": "localName_with_leading_digit",
      "result": "localName_with_leading_digit.nt"
    },
    {
      "@id": "#localName_with_non_leading_extras",
      "@type": "rdft:TestTurtleEval",
      "action": "localName_with_non_leading_extras.ttl",
      "approval": "rdft:Approved",
      "comment": "localName with_non_leading_extras (_:a·̀ͯ‿.⁀)",
      "name": "localName_with_non_leading_extras",
      "result": "localName_with_non_leading_extras.nt"
    },
    {
      "@id": "#old_style_base",
      "@type": "rdft:TestTurtleEval",
      "action": "old_style_base.ttl",
      "approval": "rdft:Approved",
      "comment": "old-style base",
      "name": "old_style_base",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#SPARQL_style_base",
      "@type": "rdft:TestTurtleEval",
      "action": "SPARQL_style_base.ttl",
      "approval": "rdft:Approved",
      "comment": "SPARQL-style base",
      "name": "SPARQL_style_base",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#labeled_blank_node_subject",
      "@type": "rdft:TestTurtleEval",
      "action": "labeled_blank_node_subject.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled blank node subject",
      "name": "labeled_blank_node_subject",
      "result": "labeled_blank_node_subject.nt"
    },
    {
      "@id": "#labeled_blank_node_object",
      "@type": "rdft:TestTurtleEval",
      "action": "labeled_blank_node_object.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled blank node object",
      "name": "labeled_blank_node_object",
      "result": "labeled_blank_node_object.nt"
    },
    {
      "@id": "#labeled_blank_node_with_PN_CHARS_BASE_character_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "labeled_blank_node_with_PN_CHARS_BASE_character_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled blank node with PN_CHARS_BASE character boundaries (_:AZazÀÖØöø...)",
      "name": "labeled_blank_node_with_PN_CHARS_BASE_character_boundaries",
      "result": "labeled_blank_node_object.nt"
    },
    {
      "@id": "#labeled_blank_node_with_leading_underscore",
      "@type": "rdft:TestTurtleEval",
      "action": "labeled_blank_node_with_leading_underscore.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled blank node with_leading_underscore (_:_)",
      "name": "labeled_blank_node_with_leading_underscore",
      "result": "labeled_blank_node_object.nt"
    },
    {
      "@id": "#labeled_blank_node_with_leading_digit",
      "@type": "rdft:TestTurtleEval",
      "action": "labeled_blank_node_with_leading_digit.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled blank node with_leading_digit (_:0)",
      "name": "labeled_blank_node_with_leading_digit",
      "result": "labeled_blank_node_object.nt"
    },
    {
      "@id": "#labeled_blank_node_with_non_leading_extras",
      "@type": "rdft:TestTurtleEval",
      "action": "labeled_blank_node_with_non_leading_extras.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled blank node with_non_leading_extras (_:a·̀ͯ‿.⁀)",
      "name": "labeled_blank_node_with_non_leading_extras",
      "result": "labeled_blank_node_object.nt"
    },
    {
      "@id": "#anonymous_blank_node_subject",
      "@type": "rdft:TestTurtleEval",
      "action": "anonymous_blank_node_subject.ttl",
      "approval": "rdft:Approved",
      "comment": "anonymous blank node subject",
      "name": "anonymous_blank_node_subject",
      "result": "labeled_blank_node_subject.nt"
    },
    {
      "@id": "#anonymous_blank_node_object",
      "@type": "rdft:TestTurtleEval",
      "action": "anonymous_blank_node_object.ttl",
      "approval": "rdft:Approved",
      "comment": "anonymous blank node object",
      "name": "anonymous_blank_node_object",
      "result": "labeled_blank_node_object.nt"
    },
    {
      "@id": "#sole_blankNodePropertyList",
      "@type": "rdft:TestTurtleEval",
      "action": "sole_blankNodePropertyList.ttl",
      "approval": "rdft:Approved",
      "comment": "sole blankNodePropertyList [ <p> <o> ] .",
      "name": "sole_blankNodePropertyList",
      "result": "labeled_blank_node_subject.nt"
    },
    {
      "@id": "#blankNodePropertyList_as_subject",
      "@type": "rdft:TestTurtleEval",
      "action": "blankNodePropertyList_as_subject.ttl",
      "approval": "rdft:Approved",
      "comment": "blankNodePropertyList as subject [ … ] <p> <o> .",
      "name": "blankNodePropertyList_as_subject",
      "result": "blankNodePropertyList_as_subject.nt"
    },
    {
      "@id": "#blankNodePropertyList_as_object",
      "@type": "rdft:TestTurtleEval",
      "action": "blankNodePropertyList_as_object.ttl",
      "approval": "rdft:Approved",
      "comment": "blankNodePropertyList as object <s> <p> [ … ] .",
      "name": "blankNodePropertyList_as_object",
      "result": "blankNodePropertyList_as_object.nt"
    },
    {
      "@id": "#blankNodePropertyList_with_multiple_triples",
      "@type": "rdft:TestTurtleEval",
      "action": "blankNodePropertyList_with_multiple_triples.ttl",
      "approval": "rdft:Approved",
      "comment": "blankNodePropertyList with multiple triples [ <s> <p> ; <s2> <p2> ]",
      "name": "blankNodePropertyList_with_multiple_triples",
      "result": "blankNodePropertyList_with_multiple_triples.nt"
    },
    {
      "@id": "#nested_blankNodePropertyLists",
      "@type": "rdft:TestTurtleEval",
      "action": "nested_blankNodePropertyLists.ttl",
      "approval": "rdft:Approved",
      "comment": "nested blankNodePropertyLists [ <p1> [ <p2> <o2> ] ; <p3> <o3> ]",
      "name": "nested_blankNodePropertyLists",
      "result": "nested_blankNodePropertyLists.nt"
    },
    {
      "@id": "#blankNodePropertyList_containing_collection",
      "@type": "rdft:TestTurtleEval",
      "action": "blankNodePropertyList_containing_collection.ttl",
      "approval": "rdft:Approved",
      "comment": "blankNodePropertyList containing collection [ <p1> ( … ) ]",
      "name": "blankNodePropertyList_containing_collection",
      "result": "blankNodePropertyList_containing_collection.nt"
    },
    {
      "@id": "#collection_subject",
      "@type": "rdft:TestTurtleEval",
      "action": "collection_subject.ttl",
      "approval": "rdft:Approved",
      "comment": "collection subject",
      "name": "collection_subject",
      "result": "collection_subject.nt"
    },
    {
      "@id": "#collection_object",
      "@type": "rdft:TestTurtleEval",
      "action": "collection_object.ttl",
      "approval": "rdft:Approved",
      "comment": "collection object",
      "name": "collection_object",
      "result": "collection_object.nt"
    },
    {
      "@id": "#empty_collection",
      "@type": "rdft:TestTurtleEval",
      "action": "empty_collection.ttl",
      "approval": "rdft:Approved",
      "comment": "empty collection ()",
      "name": "empty_collection",
      "result": "empty_collection.nt"
    },
    {
      "@id": "#nested_collection",
      "@type": "rdft:TestTurtleEval",
      "action": "nested_collection.ttl",
      "approval": "rdft:Approved",
      "comment": "nested collection (())",
      "name": "nested_collection",
      "result": "nested_collection.nt"
    },
    {
      "@id": "#first",
      "@type": "rdft:TestTurtleEval",
      "action": "first.ttl",
      "approval": "rdft:Approved",
      "comment": "first, not last, non-empty nested collection",
      "name": "first",
      "result": "first.nt"
    },
    {
      "@id": "#last",
      "@type": "rdft:TestTurtleEval",
      "action": "last.ttl",
      "approval": "rdft:Approved",
      "comment": "last, not first, non-empty nested collection",
      "name": "last",
      "result": "last.nt"
    },
    {
      "@id": "#LITERAL1",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL1.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL1 'x'",
      "name": "LITERAL1",
      "result": "LITERAL1.nt"
    },
    {
      "@id": "#LITERAL1_ascii_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL1_ascii_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL1_ascii_boundaries '\\x00\\x09\\x0b\\x0c\\x0e\\x26\\x28...'",
      "name": "LITERAL1_ascii_boundaries",
      "result": "LITERAL1_ascii_boundaries.nt"
    },
    {
      "@id": "#LITERAL1_with_UTF8_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL1_with_UTF8_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL1_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'",
      "name": "LITERAL1_with_UTF8_boundaries",
      "result": "LITERAL_with_UTF8_boundaries.nt"
    },
    {
      "@id": "#LITERAL1_all_controls",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL1_all_controls.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL1_all_controls '\\x00\\x01\\x02\\x03\\x04...'",
      "name": "LITERAL1_all_controls",
      "result": "LITERAL1_all_controls.nt"
    },
    {
      "@id": "#LITERAL1_all_punctuation",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL1_all_punctuation.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL1_all_punctuation '!\"#$%&()...'",
      "name": "LITERAL1_all_punctuation",
      "result": "LITERAL1_all_punctuation.nt"
    },
    {
      "@id": "#LITERAL_LONG1",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG1.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG1 '''x'''",
      "name": "LITERAL_LONG1",
      "result": "LITERAL1.nt"
    },
    {
      "@id": "#LITERAL_LONG1_ascii_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG1_ascii_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG1_ascii_boundaries '\\x00\\x26\\x28...'",
      "name": "LITERAL_LONG1_ascii_boundaries",
      "result": "LITERAL_LONG1_ascii_boundaries.nt"
    },
    {
      "@id": "#LITERAL_LONG1_with_UTF8_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG1_with_UTF8_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG1_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'",
      "name": "LITERAL_LONG1_with_UTF8_boundaries",
      "result": "LITERAL_with_UTF8_boundaries.nt"
    },
    {
      "@id": "#LITERAL_LONG1_with_1_squote",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG1_with_1_squote.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG1 with 1 squote '''a'b'''",
      "name": "LITERAL_LONG1_with_1_squote",
      "result": "LITERAL_LONG1_with_1_squote.nt"
    },
    {
      "@id": "#LITERAL_LONG1_with_2_squotes",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG1_with_2_squotes.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG1 with 2 squotes '''a''b'''",
      "name": "LITERAL_LONG1_with_2_squotes",
      "result": "LITERAL_LONG1_with_2_squotes.nt"
    },
    {
      "@id": "#LITERAL2",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL2.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL2 \"x\"",
      "name": "LITERAL2",
      "result": "LITERAL1.nt"
    },
    {
      "@id": "#LITERAL2_ascii_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL2_ascii_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL2_ascii_boundaries '\\x00\\x09\\x0b\\x0c\\x0e\\x21\\x23...'",
      "name": "LITERAL2_ascii_boundaries",
      "result": "LITERAL2_ascii_boundaries.nt"
    },
    {
      "@id": "#LITERAL2_with_UTF8_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL2_with_UTF8_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL2_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'",
      "name": "LITERAL2_with_UTF8_boundaries",
      "result": "LITERAL_with_UTF8_boundaries.nt"
    },
    {
      "@id": "#LITERAL_LONG2",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG2.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG2 \"\"\"x\"\"\"",
      "name": "LITERAL_LONG2",
      "result": "LITERAL1.nt"
    },
    {
      "@id": "#LITERAL_LONG2_ascii_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG2_ascii_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG2_ascii_boundaries '\\x00\\x21\\x23...'",
      "name": "LITERAL_LONG2_ascii_boundaries",
      "result": "LITERAL_LONG2_ascii_boundaries.nt"
    },
    {
      "@id": "#LITERAL_LONG2_with_UTF8_boundaries",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG2_with_UTF8_boundaries.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG2_with_UTF8_boundaries '\\x80\\x7ff\\x800\\xfff...'",
      "name": "LITERAL_LONG2_with_UTF8_boundaries",
      "result": "LITERAL_with_UTF8_boundaries.nt"
    },
    {
      "@id": "#LITERAL_LONG2_with_1_squote",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG2_with_1_squote.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG2 with 1 squote \"\"\"a\"b\"\"\"",
      "name": "LITERAL_LONG2_with_1_squote",
      "result": "LITERAL_LONG2_with_1_squote.nt"
    },
    {
      "@id": "#LITERAL_LONG2_with_2_squotes",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG2_with_2_squotes.ttl",
      "approval": "rdft:Approved",
      "comment": "LITERAL_LONG2 with 2 squotes \"\"\"a\"\"b\"\"\"",
      "name": "LITERAL_LONG2_with_2_squotes",
      "result": "LITERAL_LONG2_with_2_squotes.nt"
    },
    {
      "@id": "#literal_with_CHARACTER_TABULATION",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_CHARACTER_TABULATION.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with CHARACTER TABULATION",
      "name": "literal_with_CHARACTER_TABULATION",
      "result": "literal_with_CHARACTER_TABULATION.nt"
    },
    {
      "@id": "#literal_with_BACKSPACE",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_BACKSPACE.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with BACKSPACE",
      "name": "literal_with_BACKSPACE",
      "result": "literal_with_BACKSPACE.nt"
    },
    {
      "@id": "#literal_with_LINE_FEED",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_LINE_FEED.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with LINE FEED",
      "name": "literal_with_LINE_FEED",
      "result": "literal_with_LINE_FEED.nt"
    },
    {
      "@id": "#literal_with_CARRIAGE_RETURN",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_CARRIAGE_RETURN.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with CARRIAGE RETURN",
      "name": "literal_with_CARRIAGE_RETURN",
      "result": "literal_with_CARRIAGE_RETURN.nt"
    },
    {
      "@id": "#literal_with_FORM_FEED",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_FORM_FEED.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with FORM FEED",
      "name": "literal_with_FORM_FEED",
      "result": "literal_with_FORM_FEED.nt"
    },
    {
      "@id": "#literal_with_REVERSE_SOLIDUS",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_REVERSE_SOLIDUS.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with REVERSE SOLIDUS",
      "name": "literal_with_REVERSE_SOLIDUS",
      "result": "literal_with_REVERSE_SOLIDUS.nt"
    },
    {
      "@id": "#literal_with_escaped_CHARACTER_TABULATION",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_escaped_CHARACTER_TABULATION.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with escaped CHARACTER TABULATION",
      "name": "literal_with_escaped_CHARACTER_TABULATION",
      "result": "literal_with_CHARACTER_TABULATION.nt"
    },
    {
      "@id": "#literal_with_escaped_BACKSPACE",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_escaped_BACKSPACE.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with escaped BACKSPACE",
      "name": "literal_with_escaped_BACKSPACE",
      "result": "literal_with_BACKSPACE.nt"
    },
    {
      "@id": "#literal_with_escaped_LINE_FEED",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_escaped_LINE_FEED.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with escaped LINE FEED",
      "name": "literal_with_escaped_LINE_FEED",
      "result": "literal_with_LINE_FEED.nt"
    },
    {
      "@id": "#literal_with_escaped_CARRIAGE_RETURN",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_escaped_CARRIAGE_RETURN.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with escaped CARRIAGE RETURN",
      "name": "literal_with_escaped_CARRIAGE_RETURN",
      "result": "literal_with_CARRIAGE_RETURN.nt"
    },
    {
      "@id": "#literal_with_escaped_FORM_FEED",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_escaped_FORM_FEED.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with escaped FORM FEED",
      "name": "literal_with_escaped_FORM_FEED",
      "result": "literal_with_FORM_FEED.nt"
    },
    {
      "@id": "#literal_with_numeric_escape4",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_numeric_escape4.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with numeric escape4 \\u",
      "name": "literal_with_numeric_escape4",
      "result": "literal_with_numeric_escape4.nt"
    },
    {
      "@id": "#literal_with_numeric_escape8",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_with_numeric_escape8.ttl",
      "approval": "rdft:Approved",
      "comment": "literal with numeric escape8 \\U",
      "name": "literal_with_numeric_escape8",
      "result": "literal_with_numeric_escape4.nt"
    },
    {
      "@id": "#IRIREF_datatype",
      "@type": "rdft:TestTurtleEval",
      "action": "IRIREF_datatype.ttl",
      "approval": "rdft:Approved",
      "comment": "IRIREF datatype \"\"^^<t>",
      "name": "IRIREF_datatype",
      "result": "IRIREF_datatype.nt"
    },
    {
      "@id": "#prefixed_name_datatype",
      "@type": "rdft:TestTurtleEval",
      "action": "prefixed_name_datatype.ttl",
      "approval": "rdft:Approved",
      "comment": "prefixed name datatype \"\"^^p:t",
      "name": "prefixed_name_datatype",
      "result": "IRIREF_datatype.nt"
    },
    {
      "@id": "#bareword_integer",
      "@type": "rdft:TestTurtleEval",
      "action": "bareword_integer.ttl",
      "approval": "rdft:Approved",
      "comment": "bareword integer",
      "name": "bareword_integer",
      "result": "IRIREF_datatype.nt"
    },
    {
      "@id": "#bareword_decimal",
      "@type": "rdft:TestTurtleEval",
      "action": "bareword_decimal.ttl",
      "approval": "rdft:Approved",
      "comment": "bareword decimal",
      "name": "bareword_decimal",
      "result": "bareword_decimal.nt"
    },
    {
      "@id": "#bareword_double",
      "@type": "rdft:TestTurtleEval",
      "action": "bareword_double.ttl",
      "approval": "rdft:Approved",
      "comment": "bareword double",
      "name": "bareword_double",
      "result": "bareword_double.nt"
    },
    {
      "@id": "#double_lower_case_e",
      "@type": "rdft:TestTurtleEval",
      "action": "double_lower_case_e.ttl",
      "approval": "rdft:Approved",
      "comment": "double lower case e",
      "name": "double_lower_case_e",
      "result": "double_lower_case_e.nt"
    },
    {
      "@id": "#negative_numeric",
      "@type": "rdft:TestTurtleEval",
      "action": "negative_numeric.ttl",
      "approval": "rdft:Approved",
      "comment": "negative numeric",
      "name": "negative_numeric",
      "result": "negative_numeric.nt"
    },
    {
      "@id": "#positive_numeric",
      "@type": "rdft:TestTurtleEval",
      "action": "positive_numeric.ttl",
      "approval": "rdft:Approved",
      "comment": "positive numeric",
      "name": "positive_numeric",
      "result": "positive_numeric.nt"
    },
    {
      "@id": "#numeric_with_leading_0",
      "@type": "rdft:TestTurtleEval",
      "action": "numeric_with_leading_0.ttl",
      "approval": "rdft:Approved",
      "comment": "numeric with leading 0",
      "name": "numeric_with_leading_0",
      "result": "numeric_with_leading_0.nt"
    },
    {
      "@id": "#literal_true",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_true.ttl",
      "approval": "rdft:Approved",
      "comment": "literal true",
      "name": "literal_true",
      "result": "literal_true.nt"
    },
    {
      "@id": "#literal_false",
      "@type": "rdft:TestTurtleEval",
      "action": "literal_false.ttl",
      "approval": "rdft:Approved",
      "comment": "literal false",
      "name": "literal_false",
      "result": "literal_false.nt"
    },
    {
      "@id": "#langtagged_non_LONG",
      "@type": "rdft:TestTurtleEval",
      "action": "langtagged_non_LONG.ttl",
      "approval": "rdft:Approved",
      "comment": "langtagged non-LONG \"x\"@en",
      "name": "langtagged_non_LONG",
      "result": "langtagged_non_LONG.nt"
    },
    {
      "@id": "#langtagged_LONG",
      "@type": "rdft:TestTurtleEval",
      "action": "langtagged_LONG.ttl",
      "approval": "rdft:Approved",
      "comment": "langtagged LONG \"\"\"x\"\"\"@en",
      "name": "langtagged_LONG",
      "result": "langtagged_non_LONG.nt"
    },
    {
      "@id": "#lantag_with_subtag",
      "@type": "rdft:TestTurtleEval",
      "action": "lantag_with_subtag.ttl",
      "approval": "rdft:Approved",
      "comment": "lantag with subtag \"x\"@en-us",
      "name": "lantag_with_subtag",
      "result": "lantag_with_subtag.nt"
    },
    {
      "@id": "#objectList_with_two_objects",
      "@type": "rdft:TestTurtleEval",
      "action": "objectList_with_two_objects.ttl",
      "approval": "rdft:Approved",
      "comment": "objectList with two objects … <o1>,<o2>",
      "name": "objectList_with_two_objects",
      "result": "objectList_with_two_objects.nt"
    },
    {
      "@id": "#predicateObjectList_with_two_objectLists",
      "@type": "rdft:TestTurtleEval",
      "action": "predicateObjectList_with_two_objectLists.ttl",
      "approval": "rdft:Approved",
      "comment": "predicateObjectList with two objectLists … <o1>,<o2>",
      "name": "predicateObjectList_with_two_objectLists",
      "result": "predicateObjectList_with_two_objectLists.nt"
    },
    {
      "@id": "#repeated_semis_at_end",
      "@type": "rdft:TestTurtleEval",
      "action": "repeated_semis_at_end.ttl",
      "approval": "rdft:Approved",
      "comment": "repeated semis at end <s> <p> <o> ;; <p2> <o2> .",
      "name": "repeated_semis_at_end",
      "result": "predicateObjectList_with_two_objectLists.nt"
    },
    {
      "@id": "#repeated_semis_not_at_end",
      "@type": "rdft:TestTurtleEval",
      "action": "repeated_semis_not_at_end.ttl",
      "approval": "rdft:Approved",
      "comment": "repeated semis not at end <s> <p> <o> ;;.",
      "name": "repeated_semis_not_at_end",
      "result": "repeated_semis_not_at_end.nt"
    },
    {
      "@id": "#comment_following_localName",
      "@type": "rdft:TestTurtleEval",
      "action": "comment_following_localName.ttl",
      "approval": "rdft:Proposed",
      "comment": "comment following localName",
      "name": "comment_following_localName",
      "result": "IRI_spo.nt"
    },
    {
      "@id": "#number_sign_following_localName",
      "@type": "rdft:TestTurtleEval",
      "action": "number_sign_following_localName.ttl",
      "approval": "rdft:Proposed",
      "comment": "number sign following localName",
      "name": "number_sign_following_localName",
      "result": "number_sign_following_localName.nt"
    },
    {
      "@id": "#comment_following_PNAME_NS",
      "@type": "rdft:TestTurtleEval",
      "action": "comment_following_PNAME_NS.ttl",
      "approval": "rdft:Proposed",
      "comment": "comment following PNAME_NS",
      "name": "comment_following_PNAME_NS",
      "result": "comment_following_PNAME_NS.nt"
    },
    {
      "@id": "#number_sign_following_PNAME_NS",
      "@type": "rdft:TestTurtleEval",
      "action": "number_sign_following_PNAME_NS.ttl",
      "approval": "rdft:Proposed",
      "comment": "number sign following PNAME_NS",
      "name": "number_sign_following_PNAME_NS",
      "result": "number_sign_following_PNAME_NS.nt"
    },
    {
      "@id": "#LITERAL_LONG2_with_REVERSE_SOLIDUS",
      "@type": "rdft:TestTurtleEval",
      "action": "LITERAL_LONG2_with_REVERSE_SOLIDUS.ttl",
      "approval": "rdft:Approved",
      "comment": "REVERSE SOLIDUS at end of LITERAL_LONG2",
      "name": "LITERAL_LONG2_with_REVERSE_SOLIDUS",
      "result": "LITERAL_LONG2_with_REVERSE_SOLIDUS.nt"
    },
    {
      "@id": "#turtle-syntax-bad-LITERAL2_with_langtag_and_datatype",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-LITERAL2_with_langtag_and_datatype.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad number format (negative test)",
      "name": "turtle-syntax-bad-num-05"
    },
    {
      "@id": "#two_LITERAL_LONG2s",
      "@type": "rdft:TestTurtleEval",
      "action": "two_LITERAL_LONG2s.ttl",
      "approval": "rdft:Approved",
      "comment": "two LITERAL_LONG2s testing quote delimiter overrun",
      "name": "two_LITERAL_LONG2s",
      "result": "two_LITERAL_LONG2s.nt"
    },
    {
      "@id": "#langtagged_LONG_with_subtag",
      "@type": "rdft:TestTurtleEval",
      "action": "langtagged_LONG_with_subtag.ttl",
      "approval": "rdft:Approved",
      "comment": "langtagged LONG with subtag \"\"\"Cheers\"\"\"@en-UK",
      "name": "langtagged_LONG_with_subtag",
      "result": "langtagged_LONG_with_subtag.nt"
    },
    {
      "@id": "#turtle-syntax-file-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-file-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Empty file",
      "name": "turtle-syntax-file-01"
    },
    {
      "@id": "#turtle-syntax-file-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-file-02.ttl",
      "approval": "rdft:Approved",
      "comment": "Only comment",
      "name": "turtle-syntax-file-02"
    },
    {
      "@id": "#turtle-syntax-file-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-file-03.ttl",
      "approval": "rdft:Approved",
      "comment": "One comment, one empty line",
      "name": "turtle-syntax-file-03"
    },
    {
      "@id": "#turtle-syntax-uri-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-uri-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Only IRIs",
      "name": "turtle-syntax-uri-01"
    },
    {
      "@id": "#turtle-syntax-uri-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-uri-02.ttl",
      "approval": "rdft:Approved",
      "comment": "IRIs with Unicode escape",
      "name": "turtle-syntax-uri-02"
    },
    {
      "@id": "#turtle-syntax-uri-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-uri-03.ttl",
      "approval": "rdft:Approved",
      "comment": "IRIs with long Unicode escape",
      "name": "turtle-syntax-uri-03"
    },
    {
      "@id": "#turtle-syntax-uri-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-uri-04.ttl",
      "approval": "rdft:Approved",
      "comment": "Legal IRIs",
      "name": "turtle-syntax-uri-04"
    },
    {
      "@id": "#turtle-syntax-base-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-base-01.ttl",
      "approval": "rdft:Approved",
      "comment": "@base",
      "name": "turtle-syntax-base-01"
    },
    {
      "@id": "#turtle-syntax-base-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-base-02.ttl",
      "approval": "rdft:Approved",
      "comment": "BASE",
      "name": "turtle-syntax-base-02"
    },
    {
      "@id": "#turtle-syntax-base-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-base-03.ttl",
      "approval": "rdft:Approved",
      "comment": "@base with relative IRIs",
      "name": "turtle-syntax-base-03"
    },
    {
      "@id": "#turtle-syntax-base-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-base-04.ttl",
      "approval": "rdft:Approved",
      "comment": "base with relative IRIs",
      "name": "turtle-syntax-base-04"
    },
    {
      "@id": "#turtle-syntax-prefix-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-01.ttl",
      "approval": "rdft:Approved",
      "comment": "@prefix",
      "name": "turtle-syntax-prefix-01"
    },
    {
      "@id": "#turtle-syntax-prefix-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-02.ttl",
      "approval": "rdft:Approved",
      "comment": "PreFIX",
      "name": "turtle-syntax-prefix-02"
    },
    {
      "@id": "#turtle-syntax-prefix-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-03.ttl",
      "approval": "rdft:Approved",
      "comment": "Empty PREFIX",
      "name": "turtle-syntax-prefix-03"
    },
    {
      "@id": "#turtle-syntax-prefix-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-04.ttl",
      "approval": "rdft:Approved",
      "comment": "Empty @prefix with % escape",
      "name": "turtle-syntax-prefix-04"
    },
    {
      "@id": "#turtle-syntax-prefix-05",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-05.ttl",
      "approval": "rdft:Approved",
      "comment": "@prefix with no suffix",
      "name": "turtle-syntax-prefix-05"
    },
    {
      "@id": "#turtle-syntax-prefix-06",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-06.ttl",
      "approval": "rdft:Approved",
      "comment": "colon is a legal pname character",
      "name": "turtle-syntax-prefix-06"
    },
    {
      "@id": "#turtle-syntax-prefix-07",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-07.ttl",
      "approval": "rdft:Approved",
      "comment": "dash is a legal pname character",
      "name": "turtle-syntax-prefix-07"
    },
    {
      "@id": "#turtle-syntax-prefix-08",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-08.ttl",
      "approval": "rdft:Approved",
      "comment": "underscore is a legal pname character",
      "name": "turtle-syntax-prefix-08"
    },
    {
      "@id": "#turtle-syntax-prefix-09",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-prefix-09.ttl",
      "approval": "rdft:Approved",
      "comment": "percents in pnames",
      "name": "turtle-syntax-prefix-09"
    },
    {
      "@id": "#turtle-syntax-string-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-01.ttl",
      "approval": "rdft:Approved",
      "comment": "string literal",
      "name": "turtle-syntax-string-01"
    },
    {
      "@id": "#turtle-syntax-string-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-02.ttl",
      "approval": "rdft:Approved",
      "comment": "langString literal",
      "name": "turtle-syntax-string-02"
    },
    {
      "@id": "#turtle-syntax-string-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-03.ttl",
      "approval": "rdft:Approved",
      "comment": "langString literal with region",
      "name": "turtle-syntax-string-03"
    },
    {
      "@id": "#turtle-syntax-string-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-04.ttl",
      "approval": "rdft:Approved",
      "comment": "squote string literal",
      "name": "turtle-syntax-string-04"
    },
    {
      "@id": "#turtle-syntax-string-05",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-05.ttl",
      "approval": "rdft:Approved",
      "comment": "squote langString literal",
      "name": "turtle-syntax-string-05"
    },
    {
      "@id": "#turtle-syntax-string-06",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-06.ttl",
      "approval": "rdft:Approved",
      "comment": "squote langString literal with region",
      "name": "turtle-syntax-string-06"
    },
    {
      "@id": "#turtle-syntax-string-07",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-07.ttl",
      "approval": "rdft:Approved",
      "comment": "long string literal with embedded single- and double-quotes",
      "name": "turtle-syntax-string-07"
    },
    {
      "@id": "#turtle-syntax-string-08",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-08.ttl",
      "approval": "rdft:Approved",
      "comment": "long string literal with embedded newline",
      "name": "turtle-syntax-string-08"
    },
    {
      "@id": "#turtle-syntax-string-09",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-09.ttl",
      "approval": "rdft:Approved",
      "comment": "squote long string literal with embedded single- and double-quotes",
      "name": "turtle-syntax-string-09"
    },
    {
      "@id": "#turtle-syntax-string-10",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-10.ttl",
      "approval": "rdft:Approved",
      "comment": "long langString literal with embedded newline",
      "name": "turtle-syntax-string-10"
    },
    {
      "@id": "#turtle-syntax-string-11",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-string-11.ttl",
      "approval": "rdft:Approved",
      "comment": "squote long langString literal with embedded newline",
      "name": "turtle-syntax-string-11"
    },
    {
      "@id": "#turtle-syntax-str-esc-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-str-esc-01.ttl",
      "approval": "rdft:Approved",
      "comment": "string literal with escaped newline",
      "name": "turtle-syntax-str-esc-01"
    },
    {
      "@id": "#turtle-syntax-str-esc-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-str-esc-02.ttl",
      "approval": "rdft:Approved",
      "comment": "string literal with Unicode escape",
      "name": "turtle-syntax-str-esc-02"
    },
    {
      "@id": "#turtle-syntax-str-esc-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-str-esc-03.ttl",
      "approval": "rdft:Approved",
      "comment": "string literal with long Unicode escape",
      "name": "turtle-syntax-str-esc-03"
    },
    {
      "@id": "#turtle-syntax-pname-esc-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-pname-esc-01.ttl",
      "approval": "rdft:Approved",
      "comment": "pname with back-slash escapes",
      "name": "turtle-syntax-pname-esc-01"
    },
    {
      "@id": "#turtle-syntax-pname-esc-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-pname-esc-02.ttl",
      "approval": "rdft:Approved",
      "comment": "pname with back-slash escapes (2)",
      "name": "turtle-syntax-pname-esc-02"
    },
    {
      "@id": "#turtle-syntax-pname-esc-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-pname-esc-03.ttl",
      "approval": "rdft:Approved",
      "comment": "pname with back-slash escapes (3)",
      "name": "turtle-syntax-pname-esc-03"
    },
    {
      "@id": "#turtle-syntax-bnode-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-01.ttl",
      "approval": "rdft:Approved",
      "comment": "bnode subject",
      "name": "turtle-syntax-bnode-01"
    },
    {
      "@id": "#turtle-syntax-bnode-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-02.ttl",
      "approval": "rdft:Approved",
      "comment": "bnode object",
      "name": "turtle-syntax-bnode-02"
    },
    {
      "@id": "#turtle-syntax-bnode-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-03.ttl",
      "approval": "rdft:Approved",
      "comment": "bnode property list object",
      "name": "turtle-syntax-bnode-03"
    },
    {
      "@id": "#turtle-syntax-bnode-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-04.ttl",
      "approval": "rdft:Approved",
      "comment": "bnode property list object (2)",
      "name": "turtle-syntax-bnode-04"
    },
    {
      "@id": "#turtle-syntax-bnode-05",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-05.ttl",
      "approval": "rdft:Approved",
      "comment": "bnode property list subject",
      "name": "turtle-syntax-bnode-05"
    },
    {
      "@id": "#turtle-syntax-bnode-06",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-06.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled bnode subject",
      "name": "turtle-syntax-bnode-06"
    },
    {
      "@id": "#turtle-syntax-bnode-07",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-07.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled bnode subject and object",
      "name": "turtle-syntax-bnode-07"
    },
    {
      "@id": "#turtle-syntax-bnode-08",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-08.ttl",
      "approval": "rdft:Approved",
      "comment": "bare bnode property list",
      "name": "turtle-syntax-bnode-08"
    },
    {
      "@id": "#turtle-syntax-bnode-09",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-09.ttl",
      "approval": "rdft:Approved",
      "comment": "bnode property list",
      "name": "turtle-syntax-bnode-09"
    },
    {
      "@id": "#turtle-syntax-bnode-10",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-bnode-10.ttl",
      "approval": "rdft:Approved",
      "comment": "mixed bnode property list and triple",
      "name": "turtle-syntax-bnode-10"
    },
    {
      "@id": "#turtle-syntax-number-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-01.ttl",
      "approval": "rdft:Approved",
      "comment": "integer literal",
      "name": "turtle-syntax-number-01"
    },
    {
      "@id": "#turtle-syntax-number-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-02.ttl",
      "approval": "rdft:Approved",
      "comment": "negative integer literal",
      "name": "turtle-syntax-number-02"
    },
    {
      "@id": "#turtle-syntax-number-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-03.ttl",
      "approval": "rdft:Approved",
      "comment": "positive integer literal",
      "name": "turtle-syntax-number-03"
    },
    {
      "@id": "#turtle-syntax-number-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-04.ttl",
      "approval": "rdft:Approved",
      "comment": "decimal literal",
      "name": "turtle-syntax-number-04"
    },
    {
      "@id": "#turtle-syntax-number-05",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-05.ttl",
      "approval": "rdft:Approved",
      "comment": "decimal literal (no leading digits)",
      "name": "turtle-syntax-number-05"
    },
    {
      "@id": "#turtle-syntax-number-06",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-06.ttl",
      "approval": "rdft:Approved",
      "comment": "negative decimal literal",
      "name": "turtle-syntax-number-06"
    },
    {
      "@id": "#turtle-syntax-number-07",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-07.ttl",
      "approval": "rdft:Approved",
      "comment": "positive decimal literal",
      "name": "turtle-syntax-number-07"
    },
    {
      "@id": "#turtle-syntax-number-08",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-08.ttl",
      "approval": "rdft:Approved",
      "comment": "integer literal with decimal lexical confusion",
      "name": "turtle-syntax-number-08"
    },
    {
      "@id": "#turtle-syntax-number-09",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-09.ttl",
      "approval": "rdft:Approved",
      "comment": "double literal",
      "name": "turtle-syntax-number-09"
    },
    {
      "@id": "#turtle-syntax-number-10",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-10.ttl",
      "approval": "rdft:Approved",
      "comment": "negative double literal",
      "name": "turtle-syntax-number-10"
    },
    {
      "@id": "#turtle-syntax-number-11",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-number-11.ttl",
      "approval": "rdft:Approved",
      "comment": "double literal no fraction",
      "name": "turtle-syntax-number-11"
    },
    {
      "@id": "#turtle-syntax-datatypes-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-datatypes-01.ttl",
      "approval": "rdft:Approved",
      "comment": "xsd:byte literal",
      "name": "turtle-syntax-datatypes-01"
    },
    {
      "@id": "#turtle-syntax-datatypes-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-datatypes-02.ttl",
      "approval": "rdft:Approved",
      "comment": "integer as xsd:string",
      "name": "turtle-syntax-datatypes-02"
    },
    {
      "@id": "#turtle-syntax-kw-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-kw-01.ttl",
      "approval": "rdft:Approved",
      "comment": "boolean literal (true)",
      "name": "turtle-syntax-kw-01"
    },
    {
      "@id": "#turtle-syntax-kw-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-kw-02.ttl",
      "approval": "rdft:Approved",
      "comment": "boolean literal (false)",
      "name": "turtle-syntax-kw-02"
    },
    {
      "@id": "#turtle-syntax-kw-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-kw-03.ttl",
      "approval": "rdft:Approved",
      "comment": "'a' as keyword",
      "name": "turtle-syntax-kw-03"
    },
    {
      "@id": "#turtle-syntax-struct-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-struct-01.ttl",
      "approval": "rdft:Approved",
      "comment": "object list",
      "name": "turtle-syntax-struct-01"
    },
    {
      "@id": "#turtle-syntax-struct-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-struct-02.ttl",
      "approval": "rdft:Approved",
      "comment": "predicate list with object list",
      "name": "turtle-syntax-struct-02"
    },
    {
      "@id": "#turtle-syntax-struct-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-struct-03.ttl",
      "approval": "rdft:Approved",
      "comment": "predicate list with object list and dangling ';'",
      "name": "turtle-syntax-struct-03"
    },
    {
      "@id": "#turtle-syntax-struct-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-struct-04.ttl",
      "approval": "rdft:Approved",
      "comment": "predicate list with multiple ;;",
      "name": "turtle-syntax-struct-04"
    },
    {
      "@id": "#turtle-syntax-struct-05",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-struct-05.ttl",
      "approval": "rdft:Approved",
      "comment": "predicate list with multiple ;;",
      "name": "turtle-syntax-struct-05"
    },
    {
      "@id": "#turtle-syntax-lists-01",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-lists-01.ttl",
      "approval": "rdft:Approved",
      "comment": "empty list",
      "name": "turtle-syntax-lists-01"
    },
    {
      "@id": "#turtle-syntax-lists-02",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-lists-02.ttl",
      "approval": "rdft:Approved",
      "comment": "mixed list",
      "name": "turtle-syntax-lists-02"
    },
    {
      "@id": "#turtle-syntax-lists-03",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-lists-03.ttl",
      "approval": "rdft:Approved",
      "comment": "isomorphic list as subject and object",
      "name": "turtle-syntax-lists-03"
    },
    {
      "@id": "#turtle-syntax-lists-04",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-lists-04.ttl",
      "approval": "rdft:Approved",
      "comment": "lists of lists",
      "name": "turtle-syntax-lists-04"
    },
    {
      "@id": "#turtle-syntax-lists-05",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-lists-05.ttl",
      "approval": "rdft:Approved",
      "comment": "mixed lists with embedded lists",
      "name": "turtle-syntax-lists-05"
    },
    {
      "@id": "#turtle-syntax-bad-uri-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-uri-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : space (negative test)",
      "name": "turtle-syntax-bad-uri-01"
    },
    {
      "@id": "#turtle-syntax-bad-uri-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-uri-02.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : bad escape (negative test)",
      "name": "turtle-syntax-bad-uri-02"
    },
    {
      "@id": "#turtle-syntax-bad-uri-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-uri-03.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : bad long escape (negative test)",
      "name": "turtle-syntax-bad-uri-03"
    },
    {
      "@id": "#turtle-syntax-bad-uri-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-uri-04.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : character escapes not allowed (negative test)",
      "name": "turtle-syntax-bad-uri-04"
    },
    {
      "@id": "#turtle-syntax-bad-uri-05",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-uri-05.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : character escapes not allowed (2) (negative test)",
      "name": "turtle-syntax-bad-uri-05"
    },
    {
      "@id": "#turtle-syntax-bad-prefix-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-prefix-01.ttl",
      "approval": "rdft:Approved",
      "comment": "No prefix (negative test)",
      "name": "turtle-syntax-bad-prefix-01"
    },
    {
      "@id": "#turtle-syntax-bad-prefix-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-prefix-02.ttl",
      "approval": "rdft:Approved",
      "comment": "No prefix (2) (negative test)",
      "name": "turtle-syntax-bad-prefix-02"
    },
    {
      "@id": "#turtle-syntax-bad-prefix-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-prefix-03.ttl",
      "approval": "rdft:Approved",
      "comment": "@prefix without URI (negative test)",
      "name": "turtle-syntax-bad-prefix-03"
    },
    {
      "@id": "#turtle-syntax-bad-prefix-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-prefix-04.ttl",
      "approval": "rdft:Approved",
      "comment": "@prefix without prefix name (negative test)",
      "name": "turtle-syntax-bad-prefix-04"
    },
    {
      "@id": "#turtle-syntax-bad-prefix-05",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-prefix-05.ttl",
      "approval": "rdft:Approved",
      "comment": "@prefix without ':' (negative test)",
      "name": "turtle-syntax-bad-prefix-05"
    },
    {
      "@id": "#turtle-syntax-bad-base-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-base-01.ttl",
      "approval": "rdft:Approved",
      "comment": "@base without URI (negative test)",
      "name": "turtle-syntax-bad-base-01"
    },
    {
      "@id": "#turtle-syntax-bad-base-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-base-02.ttl",
      "approval": "rdft:Approved",
      "comment": "@base in wrong case (negative test)",
      "name": "turtle-syntax-bad-base-02"
    },
    {
      "@id": "#turtle-syntax-bad-base-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-base-03.ttl",
      "approval": "rdft:Approved",
      "comment": "BASE without URI (negative test)",
      "name": "turtle-syntax-bad-base-03"
    },
    {
      "@id": "#turtle-syntax-bad-struct-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Turtle is not TriG (negative test)",
      "name": "turtle-syntax-bad-struct-01"
    },
    {
      "@id": "#turtle-syntax-bad-struct-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-02.ttl",
      "approval": "rdft:Approved",
      "comment": "Turtle is not N3 (negative test)",
      "name": "turtle-syntax-bad-struct-02"
    },
    {
      "@id": "#turtle-syntax-bad-struct-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-03.ttl",
      "approval": "rdft:Approved",
      "comment": "Turtle is not NQuads (negative test)",
      "name": "turtle-syntax-bad-struct-03"
    },
    {
      "@id": "#turtle-syntax-bad-struct-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-04.ttl",
      "approval": "rdft:Approved",
      "comment": "Turtle does not allow literals-as-subjects (negative test)",
      "name": "turtle-syntax-bad-struct-04"
    },
    {
      "@id": "#turtle-syntax-bad-struct-05",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-05.ttl",
      "approval": "rdft:Approved",
      "comment": "Turtle does not allow literals-as-predicates (negative test)",
      "name": "turtle-syntax-bad-struct-05"
    },
    {
      "@id": "#turtle-syntax-bad-struct-06",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-06.ttl",
      "approval": "rdft:Approved",
      "comment": "Turtle does not allow bnodes-as-predicates (negative test)",
      "name": "turtle-syntax-bad-struct-06"
    },
    {
      "@id": "#turtle-syntax-bad-struct-07",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-07.ttl",
      "approval": "rdft:Approved",
      "comment": "Turtle does not allow labeled bnodes-as-predicates (negative test)",
      "name": "turtle-syntax-bad-struct-07"
    },
    {
      "@id": "#turtle-syntax-bad-kw-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-kw-01.ttl",
      "approval": "rdft:Approved",
      "comment": "'A' is not a keyword (negative test)",
      "name": "turtle-syntax-bad-kw-01"
    },
    {
      "@id": "#turtle-syntax-bad-kw-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-kw-02.ttl",
      "approval": "rdft:Approved",
      "comment": "'a' cannot be used as subject (negative test)",
      "name": "turtle-syntax-bad-kw-02"
    },
    {
      "@id": "#turtle-syntax-bad-kw-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-kw-03.ttl",
      "approval": "rdft:Approved",
      "comment": "'a' cannot be used as object (negative test)",
      "name": "turtle-syntax-bad-kw-03"
    },
    {
      "@id": "#turtle-syntax-bad-kw-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-kw-04.ttl",
      "approval": "rdft:Approved",
      "comment": "'true' cannot be used as subject (negative test)",
      "name": "turtle-syntax-bad-kw-04"
    },
    {
      "@id": "#turtle-syntax-bad-kw-05",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-kw-05.ttl",
      "approval": "rdft:Approved",
      "comment": "'true' cannot be used as object (negative test)",
      "name": "turtle-syntax-bad-kw-05"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-01.ttl",
      "approval": "rdft:Approved",
      "comment": "{} fomulae not in Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-01"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-02.ttl",
      "approval": "rdft:Approved",
      "comment": "= is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-02"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-03.ttl",
      "approval": "rdft:Approved",
      "comment": "N3 paths not in Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-03"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-04.ttl",
      "approval": "rdft:Approved",
      "comment": "N3 paths not in Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-04"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-05",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-05.ttl",
      "approval": "rdft:Approved",
      "comment": "N3 is...of not in Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-05"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-06",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-06.ttl",
      "approval": "rdft:Approved",
      "comment": "N3 paths not in Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-06"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-07",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-07.ttl",
      "approval": "rdft:Approved",
      "comment": "@keywords is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-07"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-08",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-08.ttl",
      "approval": "rdft:Approved",
      "comment": "@keywords is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-08"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-09",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-09.ttl",
      "approval": "rdft:Approved",
      "comment": "=> is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-09"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-10",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-10.ttl",
      "approval": "rdft:Approved",
      "comment": "<= is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-10"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-11",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-11.ttl",
      "approval": "rdft:Approved",
      "comment": "@forSome is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-11"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-12",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-12.ttl",
      "approval": "rdft:Approved",
      "comment": "@forAll is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-12"
    },
    {
      "@id": "#turtle-syntax-bad-n3-extras-13",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-n3-extras-13.ttl",
      "approval": "rdft:Approved",
      "comment": "@keywords is not Turtle (negative test)",
      "name": "turtle-syntax-bad-n3-extras-13"
    },
    {
      "@id": "#turtle-syntax-bad-struct-08",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-08.ttl",
      "approval": "rdft:Approved",
      "comment": "missing '.' (negative test)",
      "name": "turtle-syntax-bad-struct-08"
    },
    {
      "@id": "#turtle-syntax-bad-struct-09",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-09.ttl",
      "approval": "rdft:Approved",
      "comment": "extra '.' (negative test)",
      "name": "turtle-syntax-bad-struct-09"
    },
    {
      "@id": "#turtle-syntax-bad-struct-10",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-10.ttl",
      "approval": "rdft:Approved",
      "comment": "extra '.' (negative test)",
      "name": "turtle-syntax-bad-struct-10"
    },
    {
      "@id": "#turtle-syntax-bad-struct-11",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-11.ttl",
      "approval": "rdft:Approved",
      "comment": "trailing ';' no '.' (negative test)",
      "name": "turtle-syntax-bad-struct-11"
    },
    {
      "@id": "#turtle-syntax-bad-struct-12",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-12.ttl",
      "approval": "rdft:Approved",
      "comment": "subject, predicate, no object (negative test)",
      "name": "turtle-syntax-bad-struct-12"
    },
    {
      "@id": "#turtle-syntax-bad-struct-13",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-13.ttl",
      "approval": "rdft:Approved",
      "comment": "subject, predicate, no object (negative test)",
      "name": "turtle-syntax-bad-struct-13"
    },
    {
      "@id": "#turtle-syntax-bad-struct-14",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-14.ttl",
      "approval": "rdft:Approved",
      "comment": "literal as subject (negative test)",
      "name": "turtle-syntax-bad-struct-14"
    },
    {
      "@id": "#turtle-syntax-bad-struct-15",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-15.ttl",
      "approval": "rdft:Approved",
      "comment": "literal as predicate (negative test)",
      "name": "turtle-syntax-bad-struct-15"
    },
    {
      "@id": "#turtle-syntax-bad-struct-16",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-16.ttl",
      "approval": "rdft:Approved",
      "comment": "bnode as predicate (negative test)",
      "name": "turtle-syntax-bad-struct-16"
    },
    {
      "@id": "#turtle-syntax-bad-struct-17",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-struct-17.ttl",
      "approval": "rdft:Approved",
      "comment": "labeled bnode as predicate (negative test)",
      "name": "turtle-syntax-bad-struct-17"
    },
    {
      "@id": "#turtle-syntax-bad-lang-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-lang-01.ttl",
      "approval": "rdft:Approved",
      "comment": "langString with bad lang (negative test)",
      "name": "turtle-syntax-bad-lang-01"
    },
    {
      "@id": "#turtle-syntax-bad-esc-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-esc-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad string escape (negative test)",
      "name": "turtle-syntax-bad-esc-01"
    },
    {
      "@id": "#turtle-syntax-bad-esc-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-esc-02.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad string escape (negative test)",
      "name": "turtle-syntax-bad-esc-02"
    },
    {
      "@id": "#turtle-syntax-bad-esc-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-esc-03.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad string escape (negative test)",
      "name": "turtle-syntax-bad-esc-03"
    },
    {
      "@id": "#turtle-syntax-bad-esc-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-esc-04.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad string escape (negative test)",
      "name": "turtle-syntax-bad-esc-04"
    },
    {
      "@id": "#turtle-syntax-bad-pname-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-pname-01.ttl",
      "approval": "rdft:Approved",
      "comment": "'~' must be escaped in pname (negative test)",
      "name": "turtle-syntax-bad-pname-01"
    },
    {
      "@id": "#turtle-syntax-bad-pname-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-pname-02.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad %-sequence in pname (negative test)",
      "name": "turtle-syntax-bad-pname-02"
    },
    {
      "@id": "#turtle-syntax-bad-pname-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-pname-03.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad unicode escape in pname (negative test)",
      "name": "turtle-syntax-bad-pname-03"
    },
    {
      "@id": "#turtle-syntax-bad-string-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-string-01.ttl",
      "approval": "rdft:Approved",
      "comment": "mismatching string literal open/close (negative test)",
      "name": "turtle-syntax-bad-string-01"
    },
    {
      "@id": "#turtle-syntax-bad-string-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-string-02.ttl",
      "approval": "rdft:Approved",
      "comment": "mismatching string literal open/close (negative test)",
      "name": "turtle-syntax-bad-string-02"
    },
    {
      "@id": "#turtle-syntax-bad-string-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-string-03.ttl",
      "approval": "rdft:Approved",
      "comment": "mismatching string literal long/short (negative test)",
      "name": "turtle-syntax-bad-string-03"
    },
    {
      "@id": "#turtle-syntax-bad-string-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-string-04.ttl",
      "approval": "rdft:Approved",
      "comment": "mismatching long string literal open/close (negative test)",
      "name": "turtle-syntax-bad-string-04"
    },
    {
      "@id": "#turtle-syntax-bad-string-05",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-string-05.ttl",
      "approval": "rdft:Approved",
      "comment": "Long literal with missing end (negative test)",
      "name": "turtle-syntax-bad-string-05"
    },
    {
      "@id": "#turtle-syntax-bad-string-06",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-string-06.ttl",
      "approval": "rdft:Approved",
      "comment": "Long literal with extra quote (negative test)",
      "name": "turtle-syntax-bad-string-06"
    },
    {
      "@id": "#turtle-syntax-bad-string-07",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-string-07.ttl",
      "approval": "rdft:Approved",
      "comment": "Long literal with extra squote (negative test)",
      "name": "turtle-syntax-bad-string-07"
    },
    {
      "@id": "#turtle-syntax-bad-num-01",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-num-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad number format (negative test)",
      "name": "turtle-syntax-bad-num-01"
    },
    {
      "@id": "#turtle-syntax-bad-num-02",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-num-02.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad number format (negative test)",
      "name": "turtle-syntax-bad-num-02"
    },
    {
      "@id": "#turtle-syntax-bad-num-03",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-num-03.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad number format (negative test)",
      "name": "turtle-syntax-bad-num-03"
    },
    {
      "@id": "#turtle-syntax-bad-num-04",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-num-04.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad number format (negative test)",
      "name": "turtle-syntax-bad-num-04"
    },
    {
      "@id": "#turtle-syntax-bad-num-05",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-num-05.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad number format (negative test)",
      "name": "turtle-syntax-bad-num-05"
    },
    {
      "@id": "#turtle-eval-struct-01",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-eval-struct-01.ttl",
      "approval": "rdft:Approved",
      "comment": "triple with IRIs",
      "name": "turtle-eval-struct-01",
      "result": "turtle-eval-struct-01.nt"
    },
    {
      "@id": "#turtle-eval-struct-02",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-eval-struct-02.ttl",
      "approval": "rdft:Approved",
      "comment": "triple with IRIs and embedded whitespace",
      "name": "turtle-eval-struct-02",
      "result": "turtle-eval-struct-02.nt"
    },
    {
      "@id": "#turtle-subm-01",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Blank subject",
      "name": "turtle-subm-01",
      "result": "turtle-subm-01.nt"
    },
    {
      "@id": "#turtle-subm-02",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-02.ttl",
      "approval": "rdft:Approved",
      "comment": "@prefix and qnames",
      "name": "turtle-subm-02",
      "result": "turtle-subm-02.nt"
    },
    {
      "@id": "#turtle-subm-03",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-03.ttl",
      "approval": "rdft:Approved",
      "comment": ", operator",
      "name": "turtle-subm-03",
      "result": "turtle-subm-03.nt"
    },
    {
      "@id": "#turtle-subm-04",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-04.ttl",
      "approval": "rdft:Approved",
      "comment": "; operator",
      "name": "turtle-subm-04",
      "result": "turtle-subm-04.nt"
    },
    {
      "@id": "#turtle-subm-05",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-05.ttl",
      "approval": "rdft:Approved",
      "comment": "empty [] as subject and object",
      "name": "turtle-subm-05",
      "result": "turtle-subm-05.nt"
    },
    {
      "@id": "#turtle-subm-06",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-06.ttl",
      "approval": "rdft:Approved",
      "comment": "non-empty [] as subject and object",
      "name": "turtle-subm-06",
      "result": "turtle-subm-06.nt"
    },
    {
      "@id": "#turtle-subm-07",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-07.ttl",
      "approval": "rdft:Approved",
      "comment": "'a' as predicate",
      "name": "turtle-subm-07",
      "result": "turtle-subm-07.nt"
    },
    {
      "@id": "#turtle-subm-08",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-08.ttl",
      "approval": "rdft:Approved",
      "comment": "simple collection",
      "name": "turtle-subm-08",
      "result": "turtle-subm-08.nt"
    },
    {
      "@id": "#turtle-subm-09",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-09.ttl",
      "approval": "rdft:Approved",
      "comment": "empty collection",
      "name": "turtle-subm-09",
      "result": "turtle-subm-09.nt"
    },
    {
      "@id": "#turtle-subm-10",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-10.ttl",
      "approval": "rdft:Approved",
      "comment": "integer datatyped literal",
      "name": "turtle-subm-10",
      "result": "turtle-subm-10.nt"
    },
    {
      "@id": "#turtle-subm-11",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-11.ttl",
      "approval": "rdft:Approved",
      "comment": "decimal integer canonicalization",
      "name": "turtle-subm-11",
      "result": "turtle-subm-11.nt"
    },
    {
      "@id": "#turtle-subm-12",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-12.ttl",
      "approval": "rdft:Approved",
      "comment": "- and _ in names and qnames",
      "name": "turtle-subm-12",
      "result": "turtle-subm-12.nt"
    },
    {
      "@id": "#turtle-subm-13",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-13.ttl",
      "approval": "rdft:Approved",
      "comment": "tests for rdf:_<numbers> and other qnames starting with _",
      "name": "turtle-subm-13",
      "result": "turtle-subm-13.nt"
    },
    {
      "@id": "#turtle-subm-14",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-14.ttl",
      "approval": "rdft:Approved",
      "comment": "bare : allowed",
      "name": "turtle-subm-14",
      "result": "turtle-subm-14.nt"
    },
    {
      "@id": "#turtle-subm-15",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-15.ttl",
      "approval": "rdft:Approved",
      "comment": "simple long literal",
      "name": "turtle-subm-15",
      "result": "turtle-subm-15.nt"
    },
    {
      "@id": "#turtle-subm-16",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-16.ttl",
      "approval": "rdft:Approved",
      "comment": "long literals with escapes",
      "name": "turtle-subm-16",
      "result": "turtle-subm-16.nt"
    },
    {
      "@id": "#turtle-subm-17",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-17.ttl",
      "approval": "rdft:Approved",
      "comment": "floating point number",
      "name": "turtle-subm-17",
      "result": "turtle-subm-17.nt"
    },
    {
      "@id": "#turtle-subm-18",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-18.ttl",
      "approval": "rdft:Approved",
      "comment": "empty literals, normal and long variant",
      "name": "turtle-subm-18",
      "result": "turtle-subm-18.nt"
    },
    {
      "@id": "#turtle-subm-19",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-19.ttl",
      "approval": "rdft:Approved",
      "comment": "positive integer, decimal and doubles",
      "name": "turtle-subm-19",
      "result": "turtle-subm-19.nt"
    },
    {
      "@id": "#turtle-subm-20",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-20.ttl",
      "approval": "rdft:Approved",
      "comment": "negative integer, decimal and doubles",
      "name": "turtle-subm-20",
      "result": "turtle-subm-20.nt"
    },
    {
      "@id": "#turtle-subm-21",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-21.ttl",
      "approval": "rdft:Approved",
      "comment": "long literal ending in double quote",
      "name": "turtle-subm-21",
      "result": "turtle-subm-21.nt"
    },
    {
      "@id": "#turtle-subm-22",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-22.ttl",
      "approval": "rdft:Approved",
      "comment": "boolean literals",
      "name": "turtle-subm-22",
      "result": "turtle-subm-22.nt"
    },
    {
      "@id": "#turtle-subm-23",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-23.ttl",
      "approval": "rdft:Approved",
      "comment": "comments",
      "name": "turtle-subm-23",
      "result": "turtle-subm-23.nt"
    },
    {
      "@id": "#turtle-subm-24",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-24.ttl",
      "approval": "rdft:Approved",
      "comment": "no final mewline",
      "name": "turtle-subm-24",
      "result": "turtle-subm-24.nt"
    },
    {
      "@id": "#turtle-subm-25",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-25.ttl",
      "approval": "rdft:Approved",
      "comment": "repeating a @prefix changes pname definition",
      "name": "turtle-subm-25",
      "result": "turtle-subm-25.nt"
    },
    {
      "@id": "#turtle-subm-26",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-26.ttl",
      "approval": "rdft:Approved",
      "comment": "Variations on decimal canonicalization",
      "name": "turtle-subm-26",
      "result": "turtle-subm-26.nt"
    },
    {
      "@id": "#turtle-subm-27",
      "@type": "rdft:TestTurtleEval",
      "action": "turtle-subm-27.ttl",
      "approval": "rdft:Approved",
      "comment": "Repeating @base changes base for relative IRI lookup",
      "name": "turtle-subm-27",
      "result": "turtle-subm-27.nt"
    },
    {
      "@id": "#turtle-eval-bad-01",
      "@type": "rdft:TestTurtleNegativeEval",
      "action": "turtle-eval-bad-01.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : good escape, bad charcater (negative evaluation test)",
      "name": "turtle-eval-bad-01"
    },
    {
      "@id": "#turtle-eval-bad-02",
      "@type": "rdft:TestTurtleNegativeEval",
      "action": "turtle-eval-bad-02.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : hex 3C is < (negative evaluation test)",
      "name": "turtle-eval-bad-02"
    },
    {
      "@id": "#turtle-eval-bad-03",
      "@type": "rdft:TestTurtleNegativeEval",
      "action": "turtle-eval-bad-03.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : hex 3E is  (negative evaluation test)",
      "name": "turtle-eval-bad-03"
    },
    {
      "@id": "#turtle-eval-bad-04",
      "@type": "rdft:TestTurtleNegativeEval",
      "action": "turtle-eval-bad-04.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad IRI : {abc} (negative evaluation test)",
      "name": "turtle-eval-bad-04"
    },
    {
      "@id": "#turtle-syntax-bad-blank-label-dot-end",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-blank-label-dot-end.ttl",
      "approval": "rdft:Approved",
      "comment": "Blank node label must not end in dot",
      "name": "turtle-syntax-bad-blank-label-dot-end"
    },
    {
      "@id": "#turtle-syntax-bad-ln-dash-start",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-ln-dash-start.ttl",
      "approval": "rdft:Approved",
      "comment": "Local name must not begin with dash",
      "name": "turtle-syntax-bad-ln-dash-start"
    },
    {
      "@id": "#turtle-syntax-bad-ln-escape-start",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-ln-escape-start.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad hex escape at start of local name",
      "name": "turtle-syntax-bad-ln-escape-start"
    },
    {
      "@id": "#turtle-syntax-bad-ln-escape",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-ln-escape.ttl",
      "approval": "rdft:Approved",
      "comment": "Bad hex escape in local name",
      "name": "turtle-syntax-bad-ln-escape"
    },
    {
      "@id": "#turtle-syntax-bad-missing-ns-dot-end",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-missing-ns-dot-end.ttl",
      "approval": "rdft:Approved",
      "comment": "Prefix must not end in dot (error in triple, not prefix directive like turtle-syntax-bad-ns-dot-end)",
      "name": "turtle-syntax-bad-missing-ns-dot-end"
    },
    {
      "@id": "#turtle-syntax-bad-missing-ns-dot-start",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-missing-ns-dot-start.ttl",
      "approval": "rdft:Approved",
      "comment": "Prefix must not start with dot (error in triple, not prefix directive like turtle-syntax-bad-ns-dot-end)",
      "name": "turtle-syntax-bad-missing-ns-dot-start"
    },
    {
      "@id": "#turtle-syntax-bad-ns-dot-end",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-ns-dot-end.ttl",
      "approval": "rdft:Approved",
      "comment": "Prefix must not end in dot",
      "name": "turtle-syntax-bad-ns-dot-end"
    },
    {
      "@id": "#turtle-syntax-bad-ns-dot-start",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-ns-dot-start.ttl",
      "approval": "rdft:Approved",
      "comment": "Prefix must not start with dot",
      "name": "turtle-syntax-bad-ns-dot-start"
    },
    {
      "@id": "#turtle-syntax-bad-number-dot-in-anon",
      "@type": "rdft:TestTurtleNegativeSyntax",
      "action": "turtle-syntax-bad-number-dot-in-anon.ttl",
      "approval": "rdft:Approved",
      "comment": "Dot delimeter may not appear in anonymous nodes",
      "name": "turtle-syntax-bad-number-dot-in-anon"
    },
    {
      "@id": "#turtle-syntax-blank-label",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-blank-label.ttl",
      "approval": "rdft:Approved",
      "comment": "Characters allowed in blank node labels",
      "name": "turtle-syntax-blank-label"
    },
    {
      "@id": "#turtle-syntax-ln-colons",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-ln-colons.ttl",
      "approval": "rdft:Approved",
      "comment": "Colons in pname local names",
      "name": "turtle-syntax-ln-colons"
    },
    {
      "@id": "#turtle-syntax-ln-dots",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-ln-dots.ttl",
      "approval": "rdft:Approved",
      "comment": "Dots in pname local names",
      "name": "turtle-syntax-ln-dots"
    },
    {
      "@id": "#turtle-syntax-ns-dots",
      "@type": "rdft:TestTurtlePositiveSyntax",
      "action": "turtle-syntax-ns-dots.ttl",
      "approval": "rdft:Approved",
      "comment": "Dots in namespace names",
      "name": "turtle-syntax-ns-dots"
    },
    {
      "@id": "#IRI-resolution-01",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI-resolution-01.ttl",
      "approval": "rdft:Proposed",
      "comment": "IRI resolution (RFC3986 original cases)",
      "name": "IRI-resolution-01",
      "result": "IRI-resolution-01.nt"
    },
    {
      "@id": "#IRI-resolution-02",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI-resolution-02.ttl",
      "approval": "rdft:Proposed",
      "comment": "IRI resolution (RFC3986 using base IRI with trailing slash)",
      "name": "IRI-resolution-02",
      "result": "IRI-resolution-02.nt"
    },
    {
      "@id": "#IRI-resolution-07",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI-resolution-07.ttl",
      "approval": "rdft:Proposed",
      "comment": "IRI resolution (RFC3986 using base IRI with file path)",
      "name": "IRI-resolution-07",
      "result": "IRI-resolution-07.nt"
    },
    {
      "@id": "#IRI-resolution-08",
      "@type": "rdft:TestTurtleEval",
      "action": "IRI-resolution-08.ttl",
      "approval": "rdft:Proposed",
      "comment": "IRI resolution (miscellaneous cases)",
      "name": "IRI-resolution-08",
      "result": "IRI-resolution-08.nt"
    }
  ],
  "label": "Turtle tests"
}
